name: Docker server build

on:
    # workflow_dispatch:
    #     inputs:
    #         python-version:
    #             description: "Python version"
    #             type: string
    #             required: true
    #         pip-version:
    #             description: "Pip version"
    #             type: string
    #             required: true
    #         setuptools-version:
    #             description: "Setuptools version"
    #             type: string
    #             required: true
    #         flwr-version:
    #             description: "Flower version"
    #             type: string
    #             required: true
    push

env:
    REGISTRY_IMAGE: flwr/server
    PYTHON_VERSION: 3.11
    UBUNTU_VERSION: 22.04
    FLWR_VERSION: 1.6.0

# based on https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
jobs:
    build:
        name: Build server image
        runs-on: ubuntu-22.04
        timeout-minutes: 120
        strategy:
            fail-fast: false
            matrix:
                platform: [
                        # build-push action and qemu use different platform names
                        # therefore we create a map
                        { qemu: "", docker: "linux/amd64" },
                        { qemu: "arm64", docker: "linux/arm64" },
                    ]
        steps:
            - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

            - name: Set up QEMU
              if: matrix.platform.qemu != ''
              uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
              with:
                  platforms: ${{ matrix.platform.qemu }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@31cebacef4805868f9ce9a0cb03ee36c32df2ac4 # v5.3.0
              with:
                  images: ${{ env.REGISTRY_IMAGE }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

            - name: Login to Docker Hub
              uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - uses: ./.github/actions/bootstrap
              id: bootstrap

            - name: Build and push
              id: build
              uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
              with:
                  platforms: ${{ matrix.platform.docker }}
                  context: src/docker/server
                  build-args: |
                      PYTHON_VERSION=${{ env.PYTHON_VERSION }}
                      PIP_VERSION=${{ steps.bootstrap.outputs.pip-version }}
                      SETUPTOOLS_VERSION=${{ steps.bootstrap.outputs.setuptools-version }}
                      FLWR_VERSION=${{ env.FLWR_VERSION }}
                      UBUNTU_VERSION=${{ env.UBUNTU_VERSION }}
                  outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

            - name: Export digest
              run: |
                  mkdir -p /tmp/digests
                  digest="${{ steps.build.outputs.digest }}"
                  touch "/tmp/digests/${digest#sha256:}"

            - name: Upload digest
              uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
              with:
                  name: digests
                  path: /tmp/digests/*
                  if-no-files-found: error
                  retention-days: 1

    build-manifest:
        name: Build and push docker manifest for all platforms
        runs-on: ubuntu-22.04
        timeout-minutes: 10
        needs: build
        steps:
            - name: Download digests
              uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
              with:
                  name: digests
                  path: /tmp/digests

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@31cebacef4805868f9ce9a0cb03ee36c32df2ac4 # v5.3.0
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  tags: |
                      ${{ env.FLWR_VERSION }}-py${{ env.PYTHON_VERSION }}-ubuntu${{ env.UBUNTU_VERSION }}
                      ${{ env.FLWR_VERSION }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

            - name: Login to Docker Hub
              uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Create manifest list and push
              working-directory: /tmp/digests
              run: |
                  docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
                      $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
            - name: Inspect image
              run: docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

    #           run: |
    #               cat <<EOT >>${GITHUB_STEP_SUMMARY}
    #               Server image: ${{steps.build.outputs.imageid}}
    #               EOT
