name: Baselines

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  FLWR_TELEMETRY_ENABLED: 0

defaults:
  run:
    working-directory: baselines

jobs:
  test_baselines:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Fetch main branch
        run: git fetch origin main:main
      - name: Find changed/new baselines
        id: find_changed_baselines_dirs
        run: |
          current_branch=${{ github.head_ref }}
          if [ "$current_branch" == "main" ]
          then
            current_branch="HEAD~1"
          fi
          echo ${current_branch}
          dirs=$(git diff --dirstat=files,0 main..HEAD . | awk '{print $2}' | grep -E '^baselines/[^/]*/$' | grep -v -e '^baselines/dev' -e '^baselines/baseline_template' -e '^baselines/flwr_baselines' | sed 's/^baselines\///')
          echo "Detected changed directories: ${dirs}"
          # Save changed dirs to output of this step
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "dirs<<EOF" >> "$GITHUB_OUTPUT"
          for dir in $dirs
          do
            echo "$dir" >> "$GITHUB_OUTPUT"
          done
          echo "EOF" >> "$GITHUB_OUTPUT"
      - name: Validate changed/new baselines
        id: validate_changed_baselines_dirs
        run: |
          dirs="${{ steps.find_changed_baselines_dirs.outputs.dirs }}"
          dirs_array=()
          while IFS= read -r line; do
          dirs_array+=("$line")
          done <<< "$dirs"
          length=${#dirs_array[@]}
          echo "The number of changed baselines is $length"
  
          if [ $length -gt 1 ]; then
          echo "The changes should only apply to a single baseline"
          exit 1
          fi
  
          if [ $length -eq 0 ]; then
          echo "The baselines were not changed"
          exit 0
          fi
          
          echo "changed_dir=${dirs[0]}" >> "$GITHUB_OUTPUT"
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.15
      - name: Install build tools
        run: |
          python -m pip install -U pip==23.1.2
          python -m pip install -U setuptools==68.0.0
          python -m pip install -U poetry==1.5.1
          poetry config virtualenvs.create false
      - name: Install dependencies
        run: |
          changed_dir="${{ steps.validate_changed_baselines_dirs.outputs.changed_dir }}"
          cd "${changed_dir}"
          python -m poetry install
      - name: Test
        run: |
          dir="${{ steps.validate_changed_baselines_dirs.outputs.changed_dir }}"
          echo "Testing ${dir}"
          ./dev/test.sh $dir

