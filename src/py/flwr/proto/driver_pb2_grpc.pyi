"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 Adap GmbH. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import abc
import flwr.proto.driver_pb2
import grpc

class DriverStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    GetNodes: grpc.UnaryUnaryMultiCallable[
        flwr.proto.driver_pb2.GetNodesRequest,
        flwr.proto.driver_pb2.GetNodesResponse,
    ]
    """Return a set of nodes"""
    PushTaskIns: grpc.UnaryUnaryMultiCallable[
        flwr.proto.driver_pb2.PushTaskInsRequest,
        flwr.proto.driver_pb2.PushTaskInsResponse,
    ]
    """Create one or more tasks"""
    PullTaskRes: grpc.UnaryUnaryMultiCallable[
        flwr.proto.driver_pb2.PullTaskResRequest,
        flwr.proto.driver_pb2.PullTaskResResponse,
    ]
    """Get task results"""

class DriverServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetNodes(
        self,
        request: flwr.proto.driver_pb2.GetNodesRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.driver_pb2.GetNodesResponse:
        """Return a set of nodes"""
    @abc.abstractmethod
    def PushTaskIns(
        self,
        request: flwr.proto.driver_pb2.PushTaskInsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.driver_pb2.PushTaskInsResponse:
        """Create one or more tasks"""
    @abc.abstractmethod
    def PullTaskRes(
        self,
        request: flwr.proto.driver_pb2.PullTaskResRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.driver_pb2.PullTaskResResponse:
        """Get task results"""

def add_DriverServicer_to_server(servicer: DriverServicer, server: grpc.Server) -> None: ...
