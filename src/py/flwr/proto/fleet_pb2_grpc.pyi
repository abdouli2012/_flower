"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 Adap GmbH. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import abc
import flwr.proto.fleet_pb2
import grpc

class FleetStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    PullTaskIns: grpc.UnaryUnaryMultiCallable[
        flwr.proto.fleet_pb2.PullTaskInsRequest,
        flwr.proto.fleet_pb2.PullTaskInsResponse,
    ]
    """Retrieve one or more tasks, if possible

    HTTP API path: /api/v1/fleet/pull-task-ins
    """
    PushTaskRes: grpc.UnaryUnaryMultiCallable[
        flwr.proto.fleet_pb2.PushTaskResRequest,
        flwr.proto.fleet_pb2.PushTaskResResponse,
    ]
    """Complete one or more tasks, if possible

    HTTP API path: /api/v1/fleet/push-task-res
    """

class FleetServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def PullTaskIns(
        self,
        request: flwr.proto.fleet_pb2.PullTaskInsRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.fleet_pb2.PullTaskInsResponse:
        """Retrieve one or more tasks, if possible

        HTTP API path: /api/v1/fleet/pull-task-ins
        """
    @abc.abstractmethod
    def PushTaskRes(
        self,
        request: flwr.proto.fleet_pb2.PushTaskResRequest,
        context: grpc.ServicerContext,
    ) -> flwr.proto.fleet_pb2.PushTaskResResponse:
        """Complete one or more tasks, if possible

        HTTP API path: /api/v1/fleet/push-task-res
        """

def add_FleetServicer_to_server(servicer: FleetServicer, server: grpc.Server) -> None: ...
