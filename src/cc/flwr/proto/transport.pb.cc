// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport.proto

#include "transport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_transport_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientMessage_Disconnect;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Parameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Scalar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerMessage_GetParameters;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerMessage_Reconnect;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_EvaluateRes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_FitRes_MetricsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_ParametersRes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ServerMessage_FitIns_ConfigEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ClientMessage_FitRes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ServerMessage_EvaluateIns;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_transport_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ServerMessage_FitIns;
}  // namespace protobuf_transport_2eproto
namespace flower {
namespace transport {
class ParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parameters>
      _instance;
} _Parameters_default_instance_;
class ServerMessage_ReconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage_Reconnect>
      _instance;
} _ServerMessage_Reconnect_default_instance_;
class ServerMessage_GetParametersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage_GetParameters>
      _instance;
} _ServerMessage_GetParameters_default_instance_;
class ServerMessage_FitIns_ConfigEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage_FitIns_ConfigEntry_DoNotUse>
      _instance;
} _ServerMessage_FitIns_ConfigEntry_DoNotUse_default_instance_;
class ServerMessage_FitInsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage_FitIns>
      _instance;
} _ServerMessage_FitIns_default_instance_;
class ServerMessage_EvaluateIns_ConfigEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage_EvaluateIns_ConfigEntry_DoNotUse>
      _instance;
} _ServerMessage_EvaluateIns_ConfigEntry_DoNotUse_default_instance_;
class ServerMessage_EvaluateInsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage_EvaluateIns>
      _instance;
} _ServerMessage_EvaluateIns_default_instance_;
class ServerMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerMessage>
      _instance;
  const ::flower::transport::ServerMessage_Reconnect* reconnect_;
  const ::flower::transport::ServerMessage_GetParameters* get_parameters_;
  const ::flower::transport::ServerMessage_FitIns* fit_ins_;
  const ::flower::transport::ServerMessage_EvaluateIns* evaluate_ins_;
} _ServerMessage_default_instance_;
class ClientMessage_DisconnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage_Disconnect>
      _instance;
} _ClientMessage_Disconnect_default_instance_;
class ClientMessage_ParametersResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage_ParametersRes>
      _instance;
} _ClientMessage_ParametersRes_default_instance_;
class ClientMessage_FitRes_MetricsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage_FitRes_MetricsEntry_DoNotUse>
      _instance;
} _ClientMessage_FitRes_MetricsEntry_DoNotUse_default_instance_;
class ClientMessage_FitResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage_FitRes>
      _instance;
} _ClientMessage_FitRes_default_instance_;
class ClientMessage_EvaluateRes_MetricsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage_EvaluateRes_MetricsEntry_DoNotUse>
      _instance;
} _ClientMessage_EvaluateRes_MetricsEntry_DoNotUse_default_instance_;
class ClientMessage_EvaluateResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage_EvaluateRes>
      _instance;
} _ClientMessage_EvaluateRes_default_instance_;
class ClientMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientMessage>
      _instance;
  const ::flower::transport::ClientMessage_Disconnect* disconnect_;
  const ::flower::transport::ClientMessage_ParametersRes* parameters_res_;
  const ::flower::transport::ClientMessage_FitRes* fit_res_;
  const ::flower::transport::ClientMessage_EvaluateRes* evaluate_res_;
} _ClientMessage_default_instance_;
class ScalarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Scalar>
      _instance;
  double double__;
  ::google::protobuf::int64 sint64_;
  bool bool__;
  ::google::protobuf::internal::ArenaStringPtr string_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
} _Scalar_default_instance_;
}  // namespace transport
}  // namespace flower
namespace protobuf_transport_2eproto {
static void InitDefaultsParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_Parameters_default_instance_;
    new (ptr) ::flower::transport::Parameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::Parameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Parameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParameters}, {}};

static void InitDefaultsServerMessage_Reconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_Reconnect_default_instance_;
    new (ptr) ::flower::transport::ServerMessage_Reconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ServerMessage_Reconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerMessage_Reconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerMessage_Reconnect}, {}};

static void InitDefaultsServerMessage_GetParameters() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_GetParameters_default_instance_;
    new (ptr) ::flower::transport::ServerMessage_GetParameters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ServerMessage_GetParameters::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerMessage_GetParameters =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerMessage_GetParameters}, {}};

static void InitDefaultsServerMessage_FitIns_ConfigEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_FitIns_ConfigEntry_DoNotUse_default_instance_;
    new (ptr) ::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse();
  }
  ::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerMessage_FitIns_ConfigEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerMessage_FitIns_ConfigEntry_DoNotUse}, {
      &protobuf_transport_2eproto::scc_info_Scalar.base,}};

static void InitDefaultsServerMessage_FitIns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_FitIns_default_instance_;
    new (ptr) ::flower::transport::ServerMessage_FitIns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ServerMessage_FitIns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ServerMessage_FitIns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsServerMessage_FitIns}, {
      &protobuf_transport_2eproto::scc_info_Parameters.base,
      &protobuf_transport_2eproto::scc_info_ServerMessage_FitIns_ConfigEntry_DoNotUse.base,}};

static void InitDefaultsServerMessage_EvaluateIns_ConfigEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse_default_instance_;
    new (ptr) ::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse();
  }
  ::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerMessage_EvaluateIns_ConfigEntry_DoNotUse}, {
      &protobuf_transport_2eproto::scc_info_Scalar.base,}};

static void InitDefaultsServerMessage_EvaluateIns() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_EvaluateIns_default_instance_;
    new (ptr) ::flower::transport::ServerMessage_EvaluateIns();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ServerMessage_EvaluateIns::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ServerMessage_EvaluateIns =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsServerMessage_EvaluateIns}, {
      &protobuf_transport_2eproto::scc_info_Parameters.base,
      &protobuf_transport_2eproto::scc_info_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse.base,}};

static void InitDefaultsServerMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ServerMessage_default_instance_;
    new (ptr) ::flower::transport::ServerMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ServerMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ServerMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsServerMessage}, {
      &protobuf_transport_2eproto::scc_info_ServerMessage_Reconnect.base,
      &protobuf_transport_2eproto::scc_info_ServerMessage_GetParameters.base,
      &protobuf_transport_2eproto::scc_info_ServerMessage_FitIns.base,
      &protobuf_transport_2eproto::scc_info_ServerMessage_EvaluateIns.base,}};

static void InitDefaultsClientMessage_Disconnect() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_Disconnect_default_instance_;
    new (ptr) ::flower::transport::ClientMessage_Disconnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ClientMessage_Disconnect::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientMessage_Disconnect =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientMessage_Disconnect}, {}};

static void InitDefaultsClientMessage_ParametersRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_ParametersRes_default_instance_;
    new (ptr) ::flower::transport::ClientMessage_ParametersRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ClientMessage_ParametersRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_ParametersRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientMessage_ParametersRes}, {
      &protobuf_transport_2eproto::scc_info_Parameters.base,}};

static void InitDefaultsClientMessage_FitRes_MetricsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_FitRes_MetricsEntry_DoNotUse_default_instance_;
    new (ptr) ::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse();
  }
  ::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_FitRes_MetricsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientMessage_FitRes_MetricsEntry_DoNotUse}, {
      &protobuf_transport_2eproto::scc_info_Scalar.base,}};

static void InitDefaultsClientMessage_FitRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_FitRes_default_instance_;
    new (ptr) ::flower::transport::ClientMessage_FitRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ClientMessage_FitRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ClientMessage_FitRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsClientMessage_FitRes}, {
      &protobuf_transport_2eproto::scc_info_Parameters.base,
      &protobuf_transport_2eproto::scc_info_ClientMessage_FitRes_MetricsEntry_DoNotUse.base,}};

static void InitDefaultsClientMessage_EvaluateRes_MetricsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse_default_instance_;
    new (ptr) ::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse();
  }
  ::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientMessage_EvaluateRes_MetricsEntry_DoNotUse}, {
      &protobuf_transport_2eproto::scc_info_Scalar.base,}};

static void InitDefaultsClientMessage_EvaluateRes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_EvaluateRes_default_instance_;
    new (ptr) ::flower::transport::ClientMessage_EvaluateRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ClientMessage_EvaluateRes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ClientMessage_EvaluateRes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsClientMessage_EvaluateRes}, {
      &protobuf_transport_2eproto::scc_info_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse.base,}};

static void InitDefaultsClientMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_ClientMessage_default_instance_;
    new (ptr) ::flower::transport::ClientMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::ClientMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_ClientMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsClientMessage}, {
      &protobuf_transport_2eproto::scc_info_ClientMessage_Disconnect.base,
      &protobuf_transport_2eproto::scc_info_ClientMessage_ParametersRes.base,
      &protobuf_transport_2eproto::scc_info_ClientMessage_FitRes.base,
      &protobuf_transport_2eproto::scc_info_ClientMessage_EvaluateRes.base,}};

static void InitDefaultsScalar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flower::transport::_Scalar_default_instance_;
    new (ptr) ::flower::transport::Scalar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flower::transport::Scalar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Scalar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScalar}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Parameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage_Reconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage_GetParameters.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage_FitIns_ConfigEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage_FitIns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage_EvaluateIns.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_Disconnect.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_ParametersRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_FitRes_MetricsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_FitRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage_EvaluateRes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Scalar.base);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::Parameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::Parameters, tensors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::Parameters, tensor_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_Reconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_Reconnect, seconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_GetParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_FitIns, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage_EvaluateIns, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flower::transport::ServerMessageDefaultTypeInternal, reconnect_),
  offsetof(::flower::transport::ServerMessageDefaultTypeInternal, get_parameters_),
  offsetof(::flower::transport::ServerMessageDefaultTypeInternal, fit_ins_),
  offsetof(::flower::transport::ServerMessageDefaultTypeInternal, evaluate_ins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ServerMessage, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_Disconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_Disconnect, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_ParametersRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_ParametersRes, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes, num_examples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes, num_examples_ceil_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes, fit_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_FitRes, metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes, num_examples_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes, loss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes, accuracy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage_EvaluateRes, metrics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flower::transport::ClientMessageDefaultTypeInternal, disconnect_),
  offsetof(::flower::transport::ClientMessageDefaultTypeInternal, parameters_res_),
  offsetof(::flower::transport::ClientMessageDefaultTypeInternal, fit_res_),
  offsetof(::flower::transport::ClientMessageDefaultTypeInternal, evaluate_res_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::ClientMessage, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::Scalar, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::Scalar, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::flower::transport::ScalarDefaultTypeInternal, double__),
  offsetof(::flower::transport::ScalarDefaultTypeInternal, sint64_),
  offsetof(::flower::transport::ScalarDefaultTypeInternal, bool__),
  offsetof(::flower::transport::ScalarDefaultTypeInternal, string_),
  offsetof(::flower::transport::ScalarDefaultTypeInternal, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::flower::transport::Scalar, scalar_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flower::transport::Parameters)},
  { 7, -1, sizeof(::flower::transport::ServerMessage_Reconnect)},
  { 13, -1, sizeof(::flower::transport::ServerMessage_GetParameters)},
  { 18, 25, sizeof(::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse)},
  { 27, -1, sizeof(::flower::transport::ServerMessage_FitIns)},
  { 34, 41, sizeof(::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse)},
  { 43, -1, sizeof(::flower::transport::ServerMessage_EvaluateIns)},
  { 50, -1, sizeof(::flower::transport::ServerMessage)},
  { 60, -1, sizeof(::flower::transport::ClientMessage_Disconnect)},
  { 66, -1, sizeof(::flower::transport::ClientMessage_ParametersRes)},
  { 72, 79, sizeof(::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse)},
  { 81, -1, sizeof(::flower::transport::ClientMessage_FitRes)},
  { 91, 98, sizeof(::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse)},
  { 100, -1, sizeof(::flower::transport::ClientMessage_EvaluateRes)},
  { 109, -1, sizeof(::flower::transport::ClientMessage)},
  { 119, -1, sizeof(::flower::transport::Scalar)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_Parameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_Reconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_GetParameters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_FitIns_ConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_FitIns_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_EvaluateIns_ConfigEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_EvaluateIns_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ServerMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_Disconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_ParametersRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_FitRes_MetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_FitRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_EvaluateRes_MetricsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_EvaluateRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_ClientMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::flower::transport::_Scalar_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "transport.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017transport.proto\022\020flower.transport\"2\n\nP"
      "arameters\022\017\n\007tensors\030\001 \003(\014\022\023\n\013tensor_typ"
      "e\030\002 \001(\t\"\354\005\n\rServerMessage\022>\n\treconnect\030\001"
      " \001(\0132).flower.transport.ServerMessage.Re"
      "connectH\000\022G\n\016get_parameters\030\002 \001(\0132-.flow"
      "er.transport.ServerMessage.GetParameters"
      "H\000\0229\n\007fit_ins\030\003 \001(\0132&.flower.transport.S"
      "erverMessage.FitInsH\000\022C\n\014evaluate_ins\030\004 "
      "\001(\0132+.flower.transport.ServerMessage.Eva"
      "luateInsH\000\032\034\n\tReconnect\022\017\n\007seconds\030\001 \001(\003"
      "\032\017\n\rGetParameters\032\307\001\n\006FitIns\0220\n\nparamete"
      "rs\030\001 \001(\0132\034.flower.transport.Parameters\022B"
      "\n\006config\030\002 \003(\01322.flower.transport.Server"
      "Message.FitIns.ConfigEntry\032G\n\013ConfigEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002 \001(\0132\030.flower.t"
      "ransport.Scalar:\0028\001\032\321\001\n\013EvaluateIns\0220\n\np"
      "arameters\030\001 \001(\0132\034.flower.transport.Param"
      "eters\022G\n\006config\030\002 \003(\01327.flower.transport"
      ".ServerMessage.EvaluateIns.ConfigEntry\032G"
      "\n\013ConfigEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002 \001("
      "\0132\030.flower.transport.Scalar:\0028\001B\005\n\003msg\"\227"
      "\007\n\rClientMessage\022@\n\ndisconnect\030\001 \001(\0132*.f"
      "lower.transport.ClientMessage.Disconnect"
      "H\000\022G\n\016parameters_res\030\002 \001(\0132-.flower.tran"
      "sport.ClientMessage.ParametersResH\000\0229\n\007f"
      "it_res\030\003 \001(\0132&.flower.transport.ClientMe"
      "ssage.FitResH\000\022C\n\014evaluate_res\030\004 \001(\0132+.f"
      "lower.transport.ClientMessage.EvaluateRe"
      "sH\000\0326\n\nDisconnect\022(\n\006reason\030\001 \001(\0162\030.flow"
      "er.transport.Reason\032A\n\rParametersRes\0220\n\n"
      "parameters\030\001 \001(\0132\034.flower.transport.Para"
      "meters\032\231\002\n\006FitRes\0220\n\nparameters\030\001 \001(\0132\034."
      "flower.transport.Parameters\022\024\n\014num_examp"
      "les\030\002 \001(\003\022\035\n\021num_examples_ceil\030\003 \001(\003B\002\030\001"
      "\022\030\n\014fit_duration\030\004 \001(\002B\002\030\001\022D\n\007metrics\030\005 "
      "\003(\01323.flower.transport.ClientMessage.Fit"
      "Res.MetricsEntry\032H\n\014MetricsEntry\022\013\n\003key\030"
      "\001 \001(\t\022\'\n\005value\030\002 \001(\0132\030.flower.transport."
      "Scalar:\0028\001\032\334\001\n\013EvaluateRes\022\024\n\014num_exampl"
      "es\030\001 \001(\003\022\014\n\004loss\030\002 \001(\002\022\024\n\010accuracy\030\003 \001(\002"
      "B\002\030\001\022I\n\007metrics\030\004 \003(\01328.flower.transport"
      ".ClientMessage.EvaluateRes.MetricsEntry\032"
      "H\n\014MetricsEntry\022\013\n\003key\030\001 \001(\t\022\'\n\005value\030\002 "
      "\001(\0132\030.flower.transport.Scalar:\0028\001B\005\n\003msg"
      "\"i\n\006Scalar\022\020\n\006double\030\001 \001(\001H\000\022\020\n\006sint64\030\010"
      " \001(\022H\000\022\016\n\004bool\030\r \001(\010H\000\022\020\n\006string\030\016 \001(\tH\000"
      "\022\017\n\005bytes\030\017 \001(\014H\000B\010\n\006scalar*[\n\006Reason\022\013\n"
      "\007UNKNOWN\020\000\022\r\n\tRECONNECT\020\001\022\026\n\022POWER_DISCO"
      "NNECTED\020\002\022\024\n\020WIFI_UNAVAILABLE\020\003\022\007\n\003ACK\020\004"
      "2_\n\rFlowerService\022N\n\004Join\022\037.flower.trans"
      "port.ClientMessage\032\037.flower.transport.Se"
      "rverMessage\"\000(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2065);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "transport.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_transport_2eproto
namespace flower {
namespace transport {
const ::google::protobuf::EnumDescriptor* Reason_descriptor() {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_transport_2eproto::file_level_enum_descriptors[0];
}
bool Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Parameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameters::kTensorsFieldNumber;
const int Parameters::kTensorTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameters::Parameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Parameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.Parameters)
}
Parameters::Parameters(const Parameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tensors_(from.tensors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tensor_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tensor_type().size() > 0) {
    tensor_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_type_);
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.Parameters)
}

void Parameters::SharedCtor() {
  tensor_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Parameters::~Parameters() {
  // @@protoc_insertion_point(destructor:flower.transport.Parameters)
  SharedDtor();
}

void Parameters::SharedDtor() {
  tensor_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Parameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Parameters::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Parameters& Parameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Parameters.base);
  return *internal_default_instance();
}


void Parameters::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tensors_.Clear();
  tensor_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Parameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.Parameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes tensors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_tensors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tensor_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tensor_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tensor_type().data(), static_cast<int>(this->tensor_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flower.transport.Parameters.tensor_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.Parameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.Parameters)
  return false;
#undef DO_
}

void Parameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes tensors = 1;
  for (int i = 0, n = this->tensors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->tensors(i), output);
  }

  // string tensor_type = 2;
  if (this->tensor_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_type().data(), static_cast<int>(this->tensor_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flower.transport.Parameters.tensor_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tensor_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.Parameters)
}

::google::protobuf::uint8* Parameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.Parameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes tensors = 1;
  for (int i = 0, n = this->tensors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->tensors(i), target);
  }

  // string tensor_type = 2;
  if (this->tensor_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tensor_type().data(), static_cast<int>(this->tensor_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flower.transport.Parameters.tensor_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tensor_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.Parameters)
  return target;
}

size_t Parameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.Parameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes tensors = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tensors_size());
  for (int i = 0, n = this->tensors_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->tensors(i));
  }

  // string tensor_type = 2;
  if (this->tensor_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tensor_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.Parameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.Parameters)
    MergeFrom(*source);
  }
}

void Parameters::MergeFrom(const Parameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.Parameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tensors_.MergeFrom(from.tensors_);
  if (from.tensor_type().size() > 0) {

    tensor_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tensor_type_);
  }
}

void Parameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameters::CopyFrom(const Parameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.Parameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameters::IsInitialized() const {
  return true;
}

void Parameters::Swap(Parameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameters::InternalSwap(Parameters* other) {
  using std::swap;
  tensors_.InternalSwap(CastToBase(&other->tensors_));
  tensor_type_.Swap(&other->tensor_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Parameters::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerMessage_Reconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage_Reconnect::kSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage_Reconnect::ServerMessage_Reconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ServerMessage_Reconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ServerMessage.Reconnect)
}
ServerMessage_Reconnect::ServerMessage_Reconnect(const ServerMessage_Reconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seconds_ = from.seconds_;
  // @@protoc_insertion_point(copy_constructor:flower.transport.ServerMessage.Reconnect)
}

void ServerMessage_Reconnect::SharedCtor() {
  seconds_ = GOOGLE_LONGLONG(0);
}

ServerMessage_Reconnect::~ServerMessage_Reconnect() {
  // @@protoc_insertion_point(destructor:flower.transport.ServerMessage.Reconnect)
  SharedDtor();
}

void ServerMessage_Reconnect::SharedDtor() {
}

void ServerMessage_Reconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessage_Reconnect::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage_Reconnect& ServerMessage_Reconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ServerMessage_Reconnect.base);
  return *internal_default_instance();
}


void ServerMessage_Reconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ServerMessage.Reconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seconds_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ServerMessage_Reconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ServerMessage.Reconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 seconds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ServerMessage.Reconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ServerMessage.Reconnect)
  return false;
#undef DO_
}

void ServerMessage_Reconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ServerMessage.Reconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->seconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ServerMessage.Reconnect)
}

::google::protobuf::uint8* ServerMessage_Reconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ServerMessage.Reconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->seconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ServerMessage.Reconnect)
  return target;
}

size_t ServerMessage_Reconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ServerMessage.Reconnect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 seconds = 1;
  if (this->seconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_Reconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ServerMessage.Reconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_Reconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage_Reconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ServerMessage.Reconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ServerMessage.Reconnect)
    MergeFrom(*source);
  }
}

void ServerMessage_Reconnect::MergeFrom(const ServerMessage_Reconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ServerMessage.Reconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seconds() != 0) {
    set_seconds(from.seconds());
  }
}

void ServerMessage_Reconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ServerMessage.Reconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_Reconnect::CopyFrom(const ServerMessage_Reconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ServerMessage.Reconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_Reconnect::IsInitialized() const {
  return true;
}

void ServerMessage_Reconnect::Swap(ServerMessage_Reconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage_Reconnect::InternalSwap(ServerMessage_Reconnect* other) {
  using std::swap;
  swap(seconds_, other->seconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessage_Reconnect::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerMessage_GetParameters::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage_GetParameters::ServerMessage_GetParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ServerMessage_GetParameters.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ServerMessage.GetParameters)
}
ServerMessage_GetParameters::ServerMessage_GetParameters(const ServerMessage_GetParameters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:flower.transport.ServerMessage.GetParameters)
}

void ServerMessage_GetParameters::SharedCtor() {
}

ServerMessage_GetParameters::~ServerMessage_GetParameters() {
  // @@protoc_insertion_point(destructor:flower.transport.ServerMessage.GetParameters)
  SharedDtor();
}

void ServerMessage_GetParameters::SharedDtor() {
}

void ServerMessage_GetParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessage_GetParameters::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage_GetParameters& ServerMessage_GetParameters::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ServerMessage_GetParameters.base);
  return *internal_default_instance();
}


void ServerMessage_GetParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ServerMessage.GetParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ServerMessage_GetParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ServerMessage.GetParameters)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ServerMessage.GetParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ServerMessage.GetParameters)
  return false;
#undef DO_
}

void ServerMessage_GetParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ServerMessage.GetParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ServerMessage.GetParameters)
}

::google::protobuf::uint8* ServerMessage_GetParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ServerMessage.GetParameters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ServerMessage.GetParameters)
  return target;
}

size_t ServerMessage_GetParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ServerMessage.GetParameters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_GetParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ServerMessage.GetParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_GetParameters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage_GetParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ServerMessage.GetParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ServerMessage.GetParameters)
    MergeFrom(*source);
  }
}

void ServerMessage_GetParameters::MergeFrom(const ServerMessage_GetParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ServerMessage.GetParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerMessage_GetParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ServerMessage.GetParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_GetParameters::CopyFrom(const ServerMessage_GetParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ServerMessage.GetParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_GetParameters::IsInitialized() const {
  return true;
}

void ServerMessage_GetParameters::Swap(ServerMessage_GetParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage_GetParameters::InternalSwap(ServerMessage_GetParameters* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessage_GetParameters::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ServerMessage_FitIns_ConfigEntry_DoNotUse::ServerMessage_FitIns_ConfigEntry_DoNotUse() {}
ServerMessage_FitIns_ConfigEntry_DoNotUse::ServerMessage_FitIns_ConfigEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ServerMessage_FitIns_ConfigEntry_DoNotUse::MergeFrom(const ServerMessage_FitIns_ConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ServerMessage_FitIns_ConfigEntry_DoNotUse::GetMetadata() const {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[3];
}
void ServerMessage_FitIns_ConfigEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ServerMessage_FitIns::InitAsDefaultInstance() {
  ::flower::transport::_ServerMessage_FitIns_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::flower::transport::Parameters*>(
      ::flower::transport::Parameters::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage_FitIns::kParametersFieldNumber;
const int ServerMessage_FitIns::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage_FitIns::ServerMessage_FitIns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ServerMessage_FitIns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ServerMessage.FitIns)
}
ServerMessage_FitIns::ServerMessage_FitIns(const ServerMessage_FitIns& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_.MergeFrom(from.config_);
  if (from.has_parameters()) {
    parameters_ = new ::flower::transport::Parameters(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.ServerMessage.FitIns)
}

void ServerMessage_FitIns::SharedCtor() {
  parameters_ = NULL;
}

ServerMessage_FitIns::~ServerMessage_FitIns() {
  // @@protoc_insertion_point(destructor:flower.transport.ServerMessage.FitIns)
  SharedDtor();
}

void ServerMessage_FitIns::SharedDtor() {
  if (this != internal_default_instance()) delete parameters_;
}

void ServerMessage_FitIns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessage_FitIns::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage_FitIns& ServerMessage_FitIns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ServerMessage_FitIns.base);
  return *internal_default_instance();
}


void ServerMessage_FitIns::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ServerMessage.FitIns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  _internal_metadata_.Clear();
}

bool ServerMessage_FitIns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ServerMessage.FitIns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.Parameters parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .flower.transport.Scalar> config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ServerMessage_FitIns_ConfigEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ServerMessage_FitIns_ConfigEntry_DoNotUse,
              ::std::string, ::flower::transport::Scalar,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar > > parser(&config_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flower.transport.ServerMessage.FitIns.ConfigEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ServerMessage.FitIns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ServerMessage.FitIns)
  return false;
#undef DO_
}

void ServerMessage_FitIns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ServerMessage.FitIns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  // map<string, .flower.transport.Scalar> config = 2;
  if (!this->config().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ServerMessage.FitIns.ConfigEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->config().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ServerMessage_FitIns_ConfigEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(config_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ServerMessage_FitIns_ConfigEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it) {
        entry.reset(config_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ServerMessage.FitIns)
}

::google::protobuf::uint8* ServerMessage_FitIns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ServerMessage.FitIns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  // map<string, .flower.transport.Scalar> config = 2;
  if (!this->config().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ServerMessage.FitIns.ConfigEntry.key");
      }
    };

    if (deterministic &&
        this->config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->config().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ServerMessage_FitIns_ConfigEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(config_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ServerMessage_FitIns_ConfigEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it) {
        entry.reset(config_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ServerMessage.FitIns)
  return target;
}

size_t ServerMessage_FitIns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ServerMessage.FitIns)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flower.transport.Scalar> config = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->config_size());
  {
    ::std::unique_ptr<ServerMessage_FitIns_ConfigEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
        it = this->config().begin();
        it != this->config().end(); ++it) {
      entry.reset(config_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_FitIns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ServerMessage.FitIns)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_FitIns* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage_FitIns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ServerMessage.FitIns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ServerMessage.FitIns)
    MergeFrom(*source);
  }
}

void ServerMessage_FitIns::MergeFrom(const ServerMessage_FitIns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ServerMessage.FitIns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.has_parameters()) {
    mutable_parameters()->::flower::transport::Parameters::MergeFrom(from.parameters());
  }
}

void ServerMessage_FitIns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ServerMessage.FitIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_FitIns::CopyFrom(const ServerMessage_FitIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ServerMessage.FitIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_FitIns::IsInitialized() const {
  return true;
}

void ServerMessage_FitIns::Swap(ServerMessage_FitIns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage_FitIns::InternalSwap(ServerMessage_FitIns* other) {
  using std::swap;
  config_.Swap(&other->config_);
  swap(parameters_, other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessage_FitIns::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse() {}
ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::MergeFrom(const ServerMessage_EvaluateIns_ConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::GetMetadata() const {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[5];
}
void ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ServerMessage_EvaluateIns::InitAsDefaultInstance() {
  ::flower::transport::_ServerMessage_EvaluateIns_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::flower::transport::Parameters*>(
      ::flower::transport::Parameters::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage_EvaluateIns::kParametersFieldNumber;
const int ServerMessage_EvaluateIns::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage_EvaluateIns::ServerMessage_EvaluateIns()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ServerMessage_EvaluateIns.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ServerMessage.EvaluateIns)
}
ServerMessage_EvaluateIns::ServerMessage_EvaluateIns(const ServerMessage_EvaluateIns& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_.MergeFrom(from.config_);
  if (from.has_parameters()) {
    parameters_ = new ::flower::transport::Parameters(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.ServerMessage.EvaluateIns)
}

void ServerMessage_EvaluateIns::SharedCtor() {
  parameters_ = NULL;
}

ServerMessage_EvaluateIns::~ServerMessage_EvaluateIns() {
  // @@protoc_insertion_point(destructor:flower.transport.ServerMessage.EvaluateIns)
  SharedDtor();
}

void ServerMessage_EvaluateIns::SharedDtor() {
  if (this != internal_default_instance()) delete parameters_;
}

void ServerMessage_EvaluateIns::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessage_EvaluateIns::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage_EvaluateIns& ServerMessage_EvaluateIns::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ServerMessage_EvaluateIns.base);
  return *internal_default_instance();
}


void ServerMessage_EvaluateIns::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ServerMessage.EvaluateIns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_.Clear();
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  _internal_metadata_.Clear();
}

bool ServerMessage_EvaluateIns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ServerMessage.EvaluateIns)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.Parameters parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .flower.transport.Scalar> config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ServerMessage_EvaluateIns_ConfigEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ServerMessage_EvaluateIns_ConfigEntry_DoNotUse,
              ::std::string, ::flower::transport::Scalar,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar > > parser(&config_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flower.transport.ServerMessage.EvaluateIns.ConfigEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ServerMessage.EvaluateIns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ServerMessage.EvaluateIns)
  return false;
#undef DO_
}

void ServerMessage_EvaluateIns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ServerMessage.EvaluateIns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  // map<string, .flower.transport.Scalar> config = 2;
  if (!this->config().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ServerMessage.EvaluateIns.ConfigEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->config().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ServerMessage_EvaluateIns_ConfigEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(config_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ServerMessage_EvaluateIns_ConfigEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it) {
        entry.reset(config_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ServerMessage.EvaluateIns)
}

::google::protobuf::uint8* ServerMessage_EvaluateIns::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ServerMessage.EvaluateIns)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  // map<string, .flower.transport.Scalar> config = 2;
  if (!this->config().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ServerMessage.EvaluateIns.ConfigEntry.key");
      }
    };

    if (deterministic &&
        this->config().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->config().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ServerMessage_EvaluateIns_ConfigEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(config_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ServerMessage_EvaluateIns_ConfigEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->config().begin();
          it != this->config().end(); ++it) {
        entry.reset(config_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ServerMessage.EvaluateIns)
  return target;
}

size_t ServerMessage_EvaluateIns::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ServerMessage.EvaluateIns)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flower.transport.Scalar> config = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->config_size());
  {
    ::std::unique_ptr<ServerMessage_EvaluateIns_ConfigEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
        it = this->config().begin();
        it != this->config().end(); ++it) {
      entry.reset(config_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage_EvaluateIns::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ServerMessage.EvaluateIns)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage_EvaluateIns* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage_EvaluateIns>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ServerMessage.EvaluateIns)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ServerMessage.EvaluateIns)
    MergeFrom(*source);
  }
}

void ServerMessage_EvaluateIns::MergeFrom(const ServerMessage_EvaluateIns& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ServerMessage.EvaluateIns)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_.MergeFrom(from.config_);
  if (from.has_parameters()) {
    mutable_parameters()->::flower::transport::Parameters::MergeFrom(from.parameters());
  }
}

void ServerMessage_EvaluateIns::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ServerMessage.EvaluateIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage_EvaluateIns::CopyFrom(const ServerMessage_EvaluateIns& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ServerMessage.EvaluateIns)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage_EvaluateIns::IsInitialized() const {
  return true;
}

void ServerMessage_EvaluateIns::Swap(ServerMessage_EvaluateIns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage_EvaluateIns::InternalSwap(ServerMessage_EvaluateIns* other) {
  using std::swap;
  config_.Swap(&other->config_);
  swap(parameters_, other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessage_EvaluateIns::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerMessage::InitAsDefaultInstance() {
  ::flower::transport::_ServerMessage_default_instance_.reconnect_ = const_cast< ::flower::transport::ServerMessage_Reconnect*>(
      ::flower::transport::ServerMessage_Reconnect::internal_default_instance());
  ::flower::transport::_ServerMessage_default_instance_.get_parameters_ = const_cast< ::flower::transport::ServerMessage_GetParameters*>(
      ::flower::transport::ServerMessage_GetParameters::internal_default_instance());
  ::flower::transport::_ServerMessage_default_instance_.fit_ins_ = const_cast< ::flower::transport::ServerMessage_FitIns*>(
      ::flower::transport::ServerMessage_FitIns::internal_default_instance());
  ::flower::transport::_ServerMessage_default_instance_.evaluate_ins_ = const_cast< ::flower::transport::ServerMessage_EvaluateIns*>(
      ::flower::transport::ServerMessage_EvaluateIns::internal_default_instance());
}
void ServerMessage::set_allocated_reconnect(::flower::transport::ServerMessage_Reconnect* reconnect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (reconnect) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reconnect = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reconnect, submessage_arena);
    }
    set_has_reconnect();
    msg_.reconnect_ = reconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ServerMessage.reconnect)
}
void ServerMessage::set_allocated_get_parameters(::flower::transport::ServerMessage_GetParameters* get_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (get_parameters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      get_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, get_parameters, submessage_arena);
    }
    set_has_get_parameters();
    msg_.get_parameters_ = get_parameters;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ServerMessage.get_parameters)
}
void ServerMessage::set_allocated_fit_ins(::flower::transport::ServerMessage_FitIns* fit_ins) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (fit_ins) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fit_ins = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fit_ins, submessage_arena);
    }
    set_has_fit_ins();
    msg_.fit_ins_ = fit_ins;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ServerMessage.fit_ins)
}
void ServerMessage::set_allocated_evaluate_ins(::flower::transport::ServerMessage_EvaluateIns* evaluate_ins) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluate_ins) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      evaluate_ins = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluate_ins, submessage_arena);
    }
    set_has_evaluate_ins();
    msg_.evaluate_ins_ = evaluate_ins;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ServerMessage.evaluate_ins)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMessage::kReconnectFieldNumber;
const int ServerMessage::kGetParametersFieldNumber;
const int ServerMessage::kFitInsFieldNumber;
const int ServerMessage::kEvaluateInsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMessage::ServerMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ServerMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ServerMessage)
}
ServerMessage::ServerMessage(const ServerMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kReconnect: {
      mutable_reconnect()->::flower::transport::ServerMessage_Reconnect::MergeFrom(from.reconnect());
      break;
    }
    case kGetParameters: {
      mutable_get_parameters()->::flower::transport::ServerMessage_GetParameters::MergeFrom(from.get_parameters());
      break;
    }
    case kFitIns: {
      mutable_fit_ins()->::flower::transport::ServerMessage_FitIns::MergeFrom(from.fit_ins());
      break;
    }
    case kEvaluateIns: {
      mutable_evaluate_ins()->::flower::transport::ServerMessage_EvaluateIns::MergeFrom(from.evaluate_ins());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.ServerMessage)
}

void ServerMessage::SharedCtor() {
  clear_has_msg();
}

ServerMessage::~ServerMessage() {
  // @@protoc_insertion_point(destructor:flower.transport.ServerMessage)
  SharedDtor();
}

void ServerMessage::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void ServerMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerMessage::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMessage& ServerMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ServerMessage.base);
  return *internal_default_instance();
}


void ServerMessage::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:flower.transport.ServerMessage)
  switch (msg_case()) {
    case kReconnect: {
      delete msg_.reconnect_;
      break;
    }
    case kGetParameters: {
      delete msg_.get_parameters_;
      break;
    }
    case kFitIns: {
      delete msg_.fit_ins_;
      break;
    }
    case kEvaluateIns: {
      delete msg_.evaluate_ins_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void ServerMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool ServerMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ServerMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.ServerMessage.Reconnect reconnect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reconnect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flower.transport.ServerMessage.GetParameters get_parameters = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_get_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flower.transport.ServerMessage.FitIns fit_ins = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fit_ins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flower.transport.ServerMessage.EvaluateIns evaluate_ins = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluate_ins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ServerMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ServerMessage)
  return false;
#undef DO_
}

void ServerMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.ServerMessage.Reconnect reconnect = 1;
  if (has_reconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_reconnect(), output);
  }

  // .flower.transport.ServerMessage.GetParameters get_parameters = 2;
  if (has_get_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_get_parameters(), output);
  }

  // .flower.transport.ServerMessage.FitIns fit_ins = 3;
  if (has_fit_ins()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fit_ins(), output);
  }

  // .flower.transport.ServerMessage.EvaluateIns evaluate_ins = 4;
  if (has_evaluate_ins()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_evaluate_ins(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ServerMessage)
}

::google::protobuf::uint8* ServerMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ServerMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.ServerMessage.Reconnect reconnect = 1;
  if (has_reconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_reconnect(), deterministic, target);
  }

  // .flower.transport.ServerMessage.GetParameters get_parameters = 2;
  if (has_get_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_get_parameters(), deterministic, target);
  }

  // .flower.transport.ServerMessage.FitIns fit_ins = 3;
  if (has_fit_ins()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fit_ins(), deterministic, target);
  }

  // .flower.transport.ServerMessage.EvaluateIns evaluate_ins = 4;
  if (has_evaluate_ins()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_evaluate_ins(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ServerMessage)
  return target;
}

size_t ServerMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ServerMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_case()) {
    // .flower.transport.ServerMessage.Reconnect reconnect = 1;
    case kReconnect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.reconnect_);
      break;
    }
    // .flower.transport.ServerMessage.GetParameters get_parameters = 2;
    case kGetParameters: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.get_parameters_);
      break;
    }
    // .flower.transport.ServerMessage.FitIns fit_ins = 3;
    case kFitIns: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.fit_ins_);
      break;
    }
    // .flower.transport.ServerMessage.EvaluateIns evaluate_ins = 4;
    case kEvaluateIns: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluate_ins_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ServerMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ServerMessage)
    MergeFrom(*source);
  }
}

void ServerMessage::MergeFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ServerMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kReconnect: {
      mutable_reconnect()->::flower::transport::ServerMessage_Reconnect::MergeFrom(from.reconnect());
      break;
    }
    case kGetParameters: {
      mutable_get_parameters()->::flower::transport::ServerMessage_GetParameters::MergeFrom(from.get_parameters());
      break;
    }
    case kFitIns: {
      mutable_fit_ins()->::flower::transport::ServerMessage_FitIns::MergeFrom(from.fit_ins());
      break;
    }
    case kEvaluateIns: {
      mutable_evaluate_ins()->::flower::transport::ServerMessage_EvaluateIns::MergeFrom(from.evaluate_ins());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void ServerMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMessage::CopyFrom(const ServerMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ServerMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMessage::IsInitialized() const {
  return true;
}

void ServerMessage::Swap(ServerMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMessage::InternalSwap(ServerMessage* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerMessage::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientMessage_Disconnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage_Disconnect::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage_Disconnect::ClientMessage_Disconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ClientMessage_Disconnect.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ClientMessage.Disconnect)
}
ClientMessage_Disconnect::ClientMessage_Disconnect(const ClientMessage_Disconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:flower.transport.ClientMessage.Disconnect)
}

void ClientMessage_Disconnect::SharedCtor() {
  reason_ = 0;
}

ClientMessage_Disconnect::~ClientMessage_Disconnect() {
  // @@protoc_insertion_point(destructor:flower.transport.ClientMessage.Disconnect)
  SharedDtor();
}

void ClientMessage_Disconnect::SharedDtor() {
}

void ClientMessage_Disconnect::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessage_Disconnect::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessage_Disconnect& ClientMessage_Disconnect::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ClientMessage_Disconnect.base);
  return *internal_default_instance();
}


void ClientMessage_Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ClientMessage.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool ClientMessage_Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ClientMessage.Disconnect)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.Reason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::flower::transport::Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ClientMessage.Disconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ClientMessage.Disconnect)
  return false;
#undef DO_
}

void ClientMessage_Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ClientMessage.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Reason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ClientMessage.Disconnect)
}

::google::protobuf::uint8* ClientMessage_Disconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ClientMessage.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Reason reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ClientMessage.Disconnect)
  return target;
}

size_t ClientMessage_Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ClientMessage.Disconnect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flower.transport.Reason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ClientMessage.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_Disconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessage_Disconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ClientMessage.Disconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ClientMessage.Disconnect)
    MergeFrom(*source);
  }
}

void ClientMessage_Disconnect::MergeFrom(const ClientMessage_Disconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ClientMessage.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ClientMessage_Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ClientMessage.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_Disconnect::CopyFrom(const ClientMessage_Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ClientMessage.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_Disconnect::IsInitialized() const {
  return true;
}

void ClientMessage_Disconnect::Swap(ClientMessage_Disconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage_Disconnect::InternalSwap(ClientMessage_Disconnect* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessage_Disconnect::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientMessage_ParametersRes::InitAsDefaultInstance() {
  ::flower::transport::_ClientMessage_ParametersRes_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::flower::transport::Parameters*>(
      ::flower::transport::Parameters::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage_ParametersRes::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage_ParametersRes::ClientMessage_ParametersRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ClientMessage_ParametersRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ClientMessage.ParametersRes)
}
ClientMessage_ParametersRes::ClientMessage_ParametersRes(const ClientMessage_ParametersRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parameters()) {
    parameters_ = new ::flower::transport::Parameters(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.ClientMessage.ParametersRes)
}

void ClientMessage_ParametersRes::SharedCtor() {
  parameters_ = NULL;
}

ClientMessage_ParametersRes::~ClientMessage_ParametersRes() {
  // @@protoc_insertion_point(destructor:flower.transport.ClientMessage.ParametersRes)
  SharedDtor();
}

void ClientMessage_ParametersRes::SharedDtor() {
  if (this != internal_default_instance()) delete parameters_;
}

void ClientMessage_ParametersRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessage_ParametersRes::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessage_ParametersRes& ClientMessage_ParametersRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ClientMessage_ParametersRes.base);
  return *internal_default_instance();
}


void ClientMessage_ParametersRes::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ClientMessage.ParametersRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  _internal_metadata_.Clear();
}

bool ClientMessage_ParametersRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ClientMessage.ParametersRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.Parameters parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ClientMessage.ParametersRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ClientMessage.ParametersRes)
  return false;
#undef DO_
}

void ClientMessage_ParametersRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ClientMessage.ParametersRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ClientMessage.ParametersRes)
}

::google::protobuf::uint8* ClientMessage_ParametersRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ClientMessage.ParametersRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ClientMessage.ParametersRes)
  return target;
}

size_t ClientMessage_ParametersRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ClientMessage.ParametersRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_ParametersRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ClientMessage.ParametersRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_ParametersRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessage_ParametersRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ClientMessage.ParametersRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ClientMessage.ParametersRes)
    MergeFrom(*source);
  }
}

void ClientMessage_ParametersRes::MergeFrom(const ClientMessage_ParametersRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ClientMessage.ParametersRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parameters()) {
    mutable_parameters()->::flower::transport::Parameters::MergeFrom(from.parameters());
  }
}

void ClientMessage_ParametersRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ClientMessage.ParametersRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_ParametersRes::CopyFrom(const ClientMessage_ParametersRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ClientMessage.ParametersRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_ParametersRes::IsInitialized() const {
  return true;
}

void ClientMessage_ParametersRes::Swap(ClientMessage_ParametersRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage_ParametersRes::InternalSwap(ClientMessage_ParametersRes* other) {
  using std::swap;
  swap(parameters_, other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessage_ParametersRes::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ClientMessage_FitRes_MetricsEntry_DoNotUse::ClientMessage_FitRes_MetricsEntry_DoNotUse() {}
ClientMessage_FitRes_MetricsEntry_DoNotUse::ClientMessage_FitRes_MetricsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ClientMessage_FitRes_MetricsEntry_DoNotUse::MergeFrom(const ClientMessage_FitRes_MetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClientMessage_FitRes_MetricsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[10];
}
void ClientMessage_FitRes_MetricsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ClientMessage_FitRes::InitAsDefaultInstance() {
  ::flower::transport::_ClientMessage_FitRes_default_instance_._instance.get_mutable()->parameters_ = const_cast< ::flower::transport::Parameters*>(
      ::flower::transport::Parameters::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage_FitRes::kParametersFieldNumber;
const int ClientMessage_FitRes::kNumExamplesFieldNumber;
const int ClientMessage_FitRes::kNumExamplesCeilFieldNumber;
const int ClientMessage_FitRes::kFitDurationFieldNumber;
const int ClientMessage_FitRes::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage_FitRes::ClientMessage_FitRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ClientMessage_FitRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ClientMessage.FitRes)
}
ClientMessage_FitRes::ClientMessage_FitRes(const ClientMessage_FitRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metrics_.MergeFrom(from.metrics_);
  if (from.has_parameters()) {
    parameters_ = new ::flower::transport::Parameters(*from.parameters_);
  } else {
    parameters_ = NULL;
  }
  ::memcpy(&num_examples_, &from.num_examples_,
    static_cast<size_t>(reinterpret_cast<char*>(&fit_duration_) -
    reinterpret_cast<char*>(&num_examples_)) + sizeof(fit_duration_));
  // @@protoc_insertion_point(copy_constructor:flower.transport.ClientMessage.FitRes)
}

void ClientMessage_FitRes::SharedCtor() {
  ::memset(&parameters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fit_duration_) -
      reinterpret_cast<char*>(&parameters_)) + sizeof(fit_duration_));
}

ClientMessage_FitRes::~ClientMessage_FitRes() {
  // @@protoc_insertion_point(destructor:flower.transport.ClientMessage.FitRes)
  SharedDtor();
}

void ClientMessage_FitRes::SharedDtor() {
  if (this != internal_default_instance()) delete parameters_;
}

void ClientMessage_FitRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessage_FitRes::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessage_FitRes& ClientMessage_FitRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ClientMessage_FitRes.base);
  return *internal_default_instance();
}


void ClientMessage_FitRes::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ClientMessage.FitRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) {
    delete parameters_;
  }
  parameters_ = NULL;
  ::memset(&num_examples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fit_duration_) -
      reinterpret_cast<char*>(&num_examples_)) + sizeof(fit_duration_));
  _internal_metadata_.Clear();
}

bool ClientMessage_FitRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ClientMessage.FitRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.Parameters parameters = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_examples = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_examples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 num_examples_ceil = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_examples_ceil_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fit_duration = 4 [deprecated = true];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fit_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .flower.transport.Scalar> metrics = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ClientMessage_FitRes_MetricsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClientMessage_FitRes_MetricsEntry_DoNotUse,
              ::std::string, ::flower::transport::Scalar,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar > > parser(&metrics_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flower.transport.ClientMessage.FitRes.MetricsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ClientMessage.FitRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ClientMessage.FitRes)
  return false;
#undef DO_
}

void ClientMessage_FitRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ClientMessage.FitRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parameters(), output);
  }

  // int64 num_examples = 2;
  if (this->num_examples() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->num_examples(), output);
  }

  // int64 num_examples_ceil = 3 [deprecated = true];
  if (this->num_examples_ceil() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->num_examples_ceil(), output);
  }

  // float fit_duration = 4 [deprecated = true];
  if (this->fit_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fit_duration(), output);
  }

  // map<string, .flower.transport.Scalar> metrics = 5;
  if (!this->metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ClientMessage.FitRes.MetricsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClientMessage_FitRes_MetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClientMessage_FitRes_MetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it) {
        entry.reset(metrics_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ClientMessage.FitRes)
}

::google::protobuf::uint8* ClientMessage_FitRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ClientMessage.FitRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parameters(), deterministic, target);
  }

  // int64 num_examples = 2;
  if (this->num_examples() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->num_examples(), target);
  }

  // int64 num_examples_ceil = 3 [deprecated = true];
  if (this->num_examples_ceil() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->num_examples_ceil(), target);
  }

  // float fit_duration = 4 [deprecated = true];
  if (this->fit_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fit_duration(), target);
  }

  // map<string, .flower.transport.Scalar> metrics = 5;
  if (!this->metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ClientMessage.FitRes.MetricsEntry.key");
      }
    };

    if (deterministic &&
        this->metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClientMessage_FitRes_MetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClientMessage_FitRes_MetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it) {
        entry.reset(metrics_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ClientMessage.FitRes)
  return target;
}

size_t ClientMessage_FitRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ClientMessage.FitRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flower.transport.Scalar> metrics = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metrics_size());
  {
    ::std::unique_ptr<ClientMessage_FitRes_MetricsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
        it = this->metrics().begin();
        it != this->metrics().end(); ++it) {
      entry.reset(metrics_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .flower.transport.Parameters parameters = 1;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parameters_);
  }

  // int64 num_examples = 2;
  if (this->num_examples() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_examples());
  }

  // int64 num_examples_ceil = 3 [deprecated = true];
  if (this->num_examples_ceil() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_examples_ceil());
  }

  // float fit_duration = 4 [deprecated = true];
  if (this->fit_duration() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_FitRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ClientMessage.FitRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_FitRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessage_FitRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ClientMessage.FitRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ClientMessage.FitRes)
    MergeFrom(*source);
  }
}

void ClientMessage_FitRes::MergeFrom(const ClientMessage_FitRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ClientMessage.FitRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.has_parameters()) {
    mutable_parameters()->::flower::transport::Parameters::MergeFrom(from.parameters());
  }
  if (from.num_examples() != 0) {
    set_num_examples(from.num_examples());
  }
  if (from.num_examples_ceil() != 0) {
    set_num_examples_ceil(from.num_examples_ceil());
  }
  if (from.fit_duration() != 0) {
    set_fit_duration(from.fit_duration());
  }
}

void ClientMessage_FitRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ClientMessage.FitRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_FitRes::CopyFrom(const ClientMessage_FitRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ClientMessage.FitRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_FitRes::IsInitialized() const {
  return true;
}

void ClientMessage_FitRes::Swap(ClientMessage_FitRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage_FitRes::InternalSwap(ClientMessage_FitRes* other) {
  using std::swap;
  metrics_.Swap(&other->metrics_);
  swap(parameters_, other->parameters_);
  swap(num_examples_, other->num_examples_);
  swap(num_examples_ceil_, other->num_examples_ceil_);
  swap(fit_duration_, other->fit_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessage_FitRes::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse() {}
ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::MergeFrom(const ClientMessage_EvaluateRes_MetricsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[12];
}
void ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ClientMessage_EvaluateRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage_EvaluateRes::kNumExamplesFieldNumber;
const int ClientMessage_EvaluateRes::kLossFieldNumber;
const int ClientMessage_EvaluateRes::kAccuracyFieldNumber;
const int ClientMessage_EvaluateRes::kMetricsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage_EvaluateRes::ClientMessage_EvaluateRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ClientMessage_EvaluateRes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ClientMessage.EvaluateRes)
}
ClientMessage_EvaluateRes::ClientMessage_EvaluateRes(const ClientMessage_EvaluateRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metrics_.MergeFrom(from.metrics_);
  ::memcpy(&num_examples_, &from.num_examples_,
    static_cast<size_t>(reinterpret_cast<char*>(&accuracy_) -
    reinterpret_cast<char*>(&num_examples_)) + sizeof(accuracy_));
  // @@protoc_insertion_point(copy_constructor:flower.transport.ClientMessage.EvaluateRes)
}

void ClientMessage_EvaluateRes::SharedCtor() {
  ::memset(&num_examples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accuracy_) -
      reinterpret_cast<char*>(&num_examples_)) + sizeof(accuracy_));
}

ClientMessage_EvaluateRes::~ClientMessage_EvaluateRes() {
  // @@protoc_insertion_point(destructor:flower.transport.ClientMessage.EvaluateRes)
  SharedDtor();
}

void ClientMessage_EvaluateRes::SharedDtor() {
}

void ClientMessage_EvaluateRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessage_EvaluateRes::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessage_EvaluateRes& ClientMessage_EvaluateRes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ClientMessage_EvaluateRes.base);
  return *internal_default_instance();
}


void ClientMessage_EvaluateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ClientMessage.EvaluateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  ::memset(&num_examples_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accuracy_) -
      reinterpret_cast<char*>(&num_examples_)) + sizeof(accuracy_));
  _internal_metadata_.Clear();
}

bool ClientMessage_EvaluateRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ClientMessage.EvaluateRes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 num_examples = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_examples_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float loss = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &loss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float accuracy = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accuracy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .flower.transport.Scalar> metrics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ClientMessage_EvaluateRes_MetricsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClientMessage_EvaluateRes_MetricsEntry_DoNotUse,
              ::std::string, ::flower::transport::Scalar,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar > > parser(&metrics_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flower.transport.ClientMessage.EvaluateRes.MetricsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ClientMessage.EvaluateRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ClientMessage.EvaluateRes)
  return false;
#undef DO_
}

void ClientMessage_EvaluateRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ClientMessage.EvaluateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num_examples = 1;
  if (this->num_examples() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->num_examples(), output);
  }

  // float loss = 2;
  if (this->loss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->loss(), output);
  }

  // float accuracy = 3 [deprecated = true];
  if (this->accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->accuracy(), output);
  }

  // map<string, .flower.transport.Scalar> metrics = 4;
  if (!this->metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ClientMessage.EvaluateRes.MetricsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClientMessage_EvaluateRes_MetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClientMessage_EvaluateRes_MetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it) {
        entry.reset(metrics_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ClientMessage.EvaluateRes)
}

::google::protobuf::uint8* ClientMessage_EvaluateRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ClientMessage.EvaluateRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num_examples = 1;
  if (this->num_examples() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->num_examples(), target);
  }

  // float loss = 2;
  if (this->loss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->loss(), target);
  }

  // float accuracy = 3 [deprecated = true];
  if (this->accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->accuracy(), target);
  }

  // map<string, .flower.transport.Scalar> metrics = 4;
  if (!this->metrics().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "flower.transport.ClientMessage.EvaluateRes.MetricsEntry.key");
      }
    };

    if (deterministic &&
        this->metrics().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metrics().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClientMessage_EvaluateRes_MetricsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metrics_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClientMessage_EvaluateRes_MetricsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
          it = this->metrics().begin();
          it != this->metrics().end(); ++it) {
        entry.reset(metrics_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ClientMessage.EvaluateRes)
  return target;
}

size_t ClientMessage_EvaluateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ClientMessage.EvaluateRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .flower.transport.Scalar> metrics = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metrics_size());
  {
    ::std::unique_ptr<ClientMessage_EvaluateRes_MetricsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::flower::transport::Scalar >::const_iterator
        it = this->metrics().begin();
        it != this->metrics().end(); ++it) {
      entry.reset(metrics_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int64 num_examples = 1;
  if (this->num_examples() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num_examples());
  }

  // float loss = 2;
  if (this->loss() != 0) {
    total_size += 1 + 4;
  }

  // float accuracy = 3 [deprecated = true];
  if (this->accuracy() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage_EvaluateRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ClientMessage.EvaluateRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage_EvaluateRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessage_EvaluateRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ClientMessage.EvaluateRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ClientMessage.EvaluateRes)
    MergeFrom(*source);
  }
}

void ClientMessage_EvaluateRes::MergeFrom(const ClientMessage_EvaluateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ClientMessage.EvaluateRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.num_examples() != 0) {
    set_num_examples(from.num_examples());
  }
  if (from.loss() != 0) {
    set_loss(from.loss());
  }
  if (from.accuracy() != 0) {
    set_accuracy(from.accuracy());
  }
}

void ClientMessage_EvaluateRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ClientMessage.EvaluateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage_EvaluateRes::CopyFrom(const ClientMessage_EvaluateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ClientMessage.EvaluateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage_EvaluateRes::IsInitialized() const {
  return true;
}

void ClientMessage_EvaluateRes::Swap(ClientMessage_EvaluateRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage_EvaluateRes::InternalSwap(ClientMessage_EvaluateRes* other) {
  using std::swap;
  metrics_.Swap(&other->metrics_);
  swap(num_examples_, other->num_examples_);
  swap(loss_, other->loss_);
  swap(accuracy_, other->accuracy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessage_EvaluateRes::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientMessage::InitAsDefaultInstance() {
  ::flower::transport::_ClientMessage_default_instance_.disconnect_ = const_cast< ::flower::transport::ClientMessage_Disconnect*>(
      ::flower::transport::ClientMessage_Disconnect::internal_default_instance());
  ::flower::transport::_ClientMessage_default_instance_.parameters_res_ = const_cast< ::flower::transport::ClientMessage_ParametersRes*>(
      ::flower::transport::ClientMessage_ParametersRes::internal_default_instance());
  ::flower::transport::_ClientMessage_default_instance_.fit_res_ = const_cast< ::flower::transport::ClientMessage_FitRes*>(
      ::flower::transport::ClientMessage_FitRes::internal_default_instance());
  ::flower::transport::_ClientMessage_default_instance_.evaluate_res_ = const_cast< ::flower::transport::ClientMessage_EvaluateRes*>(
      ::flower::transport::ClientMessage_EvaluateRes::internal_default_instance());
}
void ClientMessage::set_allocated_disconnect(::flower::transport::ClientMessage_Disconnect* disconnect) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (disconnect) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      disconnect = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, disconnect, submessage_arena);
    }
    set_has_disconnect();
    msg_.disconnect_ = disconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ClientMessage.disconnect)
}
void ClientMessage::set_allocated_parameters_res(::flower::transport::ClientMessage_ParametersRes* parameters_res) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (parameters_res) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      parameters_res = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parameters_res, submessage_arena);
    }
    set_has_parameters_res();
    msg_.parameters_res_ = parameters_res;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ClientMessage.parameters_res)
}
void ClientMessage::set_allocated_fit_res(::flower::transport::ClientMessage_FitRes* fit_res) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (fit_res) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fit_res = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fit_res, submessage_arena);
    }
    set_has_fit_res();
    msg_.fit_res_ = fit_res;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ClientMessage.fit_res)
}
void ClientMessage::set_allocated_evaluate_res(::flower::transport::ClientMessage_EvaluateRes* evaluate_res) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (evaluate_res) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      evaluate_res = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, evaluate_res, submessage_arena);
    }
    set_has_evaluate_res();
    msg_.evaluate_res_ = evaluate_res;
  }
  // @@protoc_insertion_point(field_set_allocated:flower.transport.ClientMessage.evaluate_res)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMessage::kDisconnectFieldNumber;
const int ClientMessage::kParametersResFieldNumber;
const int ClientMessage::kFitResFieldNumber;
const int ClientMessage::kEvaluateResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMessage::ClientMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_ClientMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.ClientMessage)
}
ClientMessage::ClientMessage(const ClientMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kDisconnect: {
      mutable_disconnect()->::flower::transport::ClientMessage_Disconnect::MergeFrom(from.disconnect());
      break;
    }
    case kParametersRes: {
      mutable_parameters_res()->::flower::transport::ClientMessage_ParametersRes::MergeFrom(from.parameters_res());
      break;
    }
    case kFitRes: {
      mutable_fit_res()->::flower::transport::ClientMessage_FitRes::MergeFrom(from.fit_res());
      break;
    }
    case kEvaluateRes: {
      mutable_evaluate_res()->::flower::transport::ClientMessage_EvaluateRes::MergeFrom(from.evaluate_res());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.ClientMessage)
}

void ClientMessage::SharedCtor() {
  clear_has_msg();
}

ClientMessage::~ClientMessage() {
  // @@protoc_insertion_point(destructor:flower.transport.ClientMessage)
  SharedDtor();
}

void ClientMessage::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void ClientMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientMessage::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMessage& ClientMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_ClientMessage.base);
  return *internal_default_instance();
}


void ClientMessage::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:flower.transport.ClientMessage)
  switch (msg_case()) {
    case kDisconnect: {
      delete msg_.disconnect_;
      break;
    }
    case kParametersRes: {
      delete msg_.parameters_res_;
      break;
    }
    case kFitRes: {
      delete msg_.fit_res_;
      break;
    }
    case kEvaluateRes: {
      delete msg_.evaluate_res_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void ClientMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool ClientMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.ClientMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .flower.transport.ClientMessage.Disconnect disconnect = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_disconnect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flower.transport.ClientMessage.ParametersRes parameters_res = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parameters_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flower.transport.ClientMessage.FitRes fit_res = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fit_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .flower.transport.ClientMessage.EvaluateRes evaluate_res = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_evaluate_res()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.ClientMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.ClientMessage)
  return false;
#undef DO_
}

void ClientMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.ClientMessage.Disconnect disconnect = 1;
  if (has_disconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_disconnect(), output);
  }

  // .flower.transport.ClientMessage.ParametersRes parameters_res = 2;
  if (has_parameters_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_parameters_res(), output);
  }

  // .flower.transport.ClientMessage.FitRes fit_res = 3;
  if (has_fit_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_fit_res(), output);
  }

  // .flower.transport.ClientMessage.EvaluateRes evaluate_res = 4;
  if (has_evaluate_res()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_evaluate_res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.ClientMessage)
}

::google::protobuf::uint8* ClientMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.ClientMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .flower.transport.ClientMessage.Disconnect disconnect = 1;
  if (has_disconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_disconnect(), deterministic, target);
  }

  // .flower.transport.ClientMessage.ParametersRes parameters_res = 2;
  if (has_parameters_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_parameters_res(), deterministic, target);
  }

  // .flower.transport.ClientMessage.FitRes fit_res = 3;
  if (has_fit_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_fit_res(), deterministic, target);
  }

  // .flower.transport.ClientMessage.EvaluateRes evaluate_res = 4;
  if (has_evaluate_res()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_evaluate_res(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.ClientMessage)
  return target;
}

size_t ClientMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.ClientMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_case()) {
    // .flower.transport.ClientMessage.Disconnect disconnect = 1;
    case kDisconnect: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.disconnect_);
      break;
    }
    // .flower.transport.ClientMessage.ParametersRes parameters_res = 2;
    case kParametersRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.parameters_res_);
      break;
    }
    // .flower.transport.ClientMessage.FitRes fit_res = 3;
    case kFitRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.fit_res_);
      break;
    }
    // .flower.transport.ClientMessage.EvaluateRes evaluate_res = 4;
    case kEvaluateRes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.evaluate_res_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.ClientMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.ClientMessage)
    MergeFrom(*source);
  }
}

void ClientMessage::MergeFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.ClientMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kDisconnect: {
      mutable_disconnect()->::flower::transport::ClientMessage_Disconnect::MergeFrom(from.disconnect());
      break;
    }
    case kParametersRes: {
      mutable_parameters_res()->::flower::transport::ClientMessage_ParametersRes::MergeFrom(from.parameters_res());
      break;
    }
    case kFitRes: {
      mutable_fit_res()->::flower::transport::ClientMessage_FitRes::MergeFrom(from.fit_res());
      break;
    }
    case kEvaluateRes: {
      mutable_evaluate_res()->::flower::transport::ClientMessage_EvaluateRes::MergeFrom(from.evaluate_res());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void ClientMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMessage::CopyFrom(const ClientMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.ClientMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMessage::IsInitialized() const {
  return true;
}

void ClientMessage::Swap(ClientMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMessage::InternalSwap(ClientMessage* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientMessage::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Scalar::InitAsDefaultInstance() {
  ::flower::transport::_Scalar_default_instance_.double__ = 0;
  ::flower::transport::_Scalar_default_instance_.sint64_ = GOOGLE_LONGLONG(0);
  ::flower::transport::_Scalar_default_instance_.bool__ = false;
  ::flower::transport::_Scalar_default_instance_.string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::flower::transport::_Scalar_default_instance_.bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scalar::kDoubleFieldNumber;
const int Scalar::kSint64FieldNumber;
const int Scalar::kBoolFieldNumber;
const int Scalar::kStringFieldNumber;
const int Scalar::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scalar::Scalar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_transport_2eproto::scc_info_Scalar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:flower.transport.Scalar)
}
Scalar::Scalar(const Scalar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_scalar();
  switch (from.scalar_case()) {
    case kDouble: {
      set_double_(from.double_());
      break;
    }
    case kSint64: {
      set_sint64(from.sint64());
      break;
    }
    case kBool: {
      set_bool_(from.bool_());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case kBytes: {
      set_bytes(from.bytes());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flower.transport.Scalar)
}

void Scalar::SharedCtor() {
  clear_has_scalar();
}

Scalar::~Scalar() {
  // @@protoc_insertion_point(destructor:flower.transport.Scalar)
  SharedDtor();
}

void Scalar::SharedDtor() {
  if (has_scalar()) {
    clear_scalar();
  }
}

void Scalar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Scalar::descriptor() {
  ::protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Scalar& Scalar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_transport_2eproto::scc_info_Scalar.base);
  return *internal_default_instance();
}


void Scalar::clear_scalar() {
// @@protoc_insertion_point(one_of_clear_start:flower.transport.Scalar)
  switch (scalar_case()) {
    case kDouble: {
      // No need to clear
      break;
    }
    case kSint64: {
      // No need to clear
      break;
    }
    case kBool: {
      // No need to clear
      break;
    }
    case kString: {
      scalar_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBytes: {
      scalar_.bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SCALAR_NOT_SET;
}


void Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:flower.transport.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_scalar();
  _internal_metadata_.Clear();
}

bool Scalar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flower.transport.Scalar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          clear_scalar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scalar_.double__)));
          set_has_double_();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 sint64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          clear_scalar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &scalar_.sint64_)));
          set_has_sint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          clear_scalar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scalar_.bool__)));
          set_has_bool_();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flower.transport.Scalar.string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flower.transport.Scalar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flower.transport.Scalar)
  return false;
#undef DO_
}

void Scalar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flower.transport.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double double = 1;
  if (has_double_()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->double_(), output);
  }

  // sint64 sint64 = 8;
  if (has_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->sint64(), output);
  }

  // bool bool = 13;
  if (has_bool_()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->bool_(), output);
  }

  // string string = 14;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flower.transport.Scalar.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->string(), output);
  }

  // bytes bytes = 15;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->bytes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:flower.transport.Scalar)
}

::google::protobuf::uint8* Scalar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:flower.transport.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double double = 1;
  if (has_double_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->double_(), target);
  }

  // sint64 sint64 = 8;
  if (has_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->sint64(), target);
  }

  // bool bool = 13;
  if (has_bool_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->bool_(), target);
  }

  // string string = 14;
  if (has_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), static_cast<int>(this->string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flower.transport.Scalar.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->string(), target);
  }

  // bytes bytes = 15;
  if (has_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->bytes(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flower.transport.Scalar)
  return target;
}

size_t Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flower.transport.Scalar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (scalar_case()) {
    // double double = 1;
    case kDouble: {
      total_size += 1 + 8;
      break;
    }
    // sint64 sint64 = 8;
    case kSint64: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint64());
      break;
    }
    // bool bool = 13;
    case kBool: {
      total_size += 1 + 1;
      break;
    }
    // string string = 14;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
      break;
    }
    // bytes bytes = 15;
    case kBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scalar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flower.transport.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  const Scalar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Scalar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flower.transport.Scalar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flower.transport.Scalar)
    MergeFrom(*source);
  }
}

void Scalar::MergeFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flower.transport.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.scalar_case()) {
    case kDouble: {
      set_double_(from.double_());
      break;
    }
    case kSint64: {
      set_sint64(from.sint64());
      break;
    }
    case kBool: {
      set_bool_(from.bool_());
      break;
    }
    case kString: {
      set_string(from.string());
      break;
    }
    case kBytes: {
      set_bytes(from.bytes());
      break;
    }
    case SCALAR_NOT_SET: {
      break;
    }
  }
}

void Scalar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flower.transport.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scalar::CopyFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flower.transport.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scalar::IsInitialized() const {
  return true;
}

void Scalar::Swap(Scalar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scalar::InternalSwap(Scalar* other) {
  using std::swap;
  swap(scalar_, other->scalar_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Scalar::GetMetadata() const {
  protobuf_transport_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_transport_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace transport
}  // namespace flower
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::Parameters* Arena::CreateMaybeMessage< ::flower::transport::Parameters >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::Parameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage_Reconnect* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage_Reconnect >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage_Reconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage_GetParameters* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage_GetParameters >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage_GetParameters >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage_FitIns_ConfigEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage_FitIns* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage_FitIns >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage_FitIns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage_EvaluateIns_ConfigEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage_EvaluateIns* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage_EvaluateIns >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage_EvaluateIns >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ServerMessage* Arena::CreateMaybeMessage< ::flower::transport::ServerMessage >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ServerMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage_Disconnect* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage_Disconnect >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage_Disconnect >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage_ParametersRes* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage_ParametersRes >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage_ParametersRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage_FitRes_MetricsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage_FitRes* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage_FitRes >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage_FitRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage_EvaluateRes_MetricsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage_EvaluateRes* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage_EvaluateRes >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage_EvaluateRes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::ClientMessage* Arena::CreateMaybeMessage< ::flower::transport::ClientMessage >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::ClientMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::flower::transport::Scalar* Arena::CreateMaybeMessage< ::flower::transport::Scalar >(Arena* arena) {
  return Arena::CreateInternal< ::flower::transport::Scalar >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
