# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Adap GmbH
# This file is distributed under the same license as the Flower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flower \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-09 15:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/devcontainer.rst:2
msgid "VS Code Remote - Containers"
msgstr ""

#: ../../source/devcontainer.rst:4
msgid ""
"When working on the Flower framework we want to ensure that all "
"contributors use the same developer environment to format code or run "
"tests. For this purpose we are using the VSCode Remote Containers "
"extension. What is it? Read the following quote:"
msgstr ""

#: ../../source/devcontainer.rst:7
msgid ""
"The Visual Studio Code Remote - Containers extension lets you use a "
"Docker container as a fully-featured development environment. It allows "
"you to open any folder inside (or mounted into) a container and take "
"advantage of Visual Studio Code's full feature set. A "
":code:`devcontainer.json` file in your project tells VS Code how to "
"access (or create) a development container with a well-defined tool and "
"runtime stack. This container can be used to run an application or to "
"separate tools, libraries, or runtimes needed for working with a "
"codebase."
msgstr ""

#: ../../source/devcontainer.rst:9
msgid ""
"Workspace files are mounted from the local file system or copied or "
"cloned into the container. Extensions are installed and run inside the "
"container, where they have full access to the tools, platform, and file "
"system. This means that you can seamlessly switch your entire development"
" environment just by connecting to a different container."
msgstr ""

#: ../../source/devcontainer.rst:11
msgid ""
"Source: `Official VSCode documentation "
"<https://code.visualstudio.com/docs/remote/containers>`_"
msgstr ""

#: ../../source/devcontainer.rst:15
msgid "Getting started"
msgstr ""

#: ../../source/devcontainer.rst:17
msgid ""
"Configuring and setting up the :code:`Dockerfile` as well the "
"configuration for the devcontainer can be a bit more involved. The good "
"thing is you want have to do it. Usually it should be enough to install "
"Docker on your system and ensure its available on your command line. "
"Additionally, install the `VSCode Containers Extension <vscode:extension"
"/ms-vscode-remote.remote-containers>`_."
msgstr ""

#: ../../source/devcontainer.rst:19
msgid ""
"Now you should be good to go. When starting VSCode, it will ask you to "
"run in the container environment and - if you confirm - automatically "
"build the container and use it. To manually instruct VSCode to use the "
"devcontainer, you can, after installing the extension, click the green "
"area in the bottom left corner of your VSCode window and select the "
"option *(Re)Open Folder in Container*."
msgstr ""

#: ../../source/devcontainer.rst:21
msgid ""
"In some cases your setup might be more involved. For those cases consult "
"the following sources:"
msgstr ""

#: ../../source/devcontainer.rst:23
msgid ""
"`Developing inside a Container "
"<https://code.visualstudio.com/docs/remote/containers#_system-"
"requirements>`_"
msgstr ""

#: ../../source/devcontainer.rst:24
msgid ""
"`Remote development in Containers "
"<https://code.visualstudio.com/docs/remote/containers-tutorial>`_"
msgstr ""

