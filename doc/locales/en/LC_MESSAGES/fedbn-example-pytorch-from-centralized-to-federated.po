# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Adap GmbH
# This file is distributed under the same license as the Flower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flower \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-09 15:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:2
msgid "Example: FedBN in PyTorch - From Centralized To Federated"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:4
msgid ""
"This tutorial will show you how to use Flower to build a federated "
"version of an existing machine learning workload with `FedBN "
"<https://github.com/med-air/FedBN>`_, a federated training strategy "
"designed for non-iid data. We are using PyTorch to train a Convolutional "
"Neural Network(with Batch Normalization layers) on the CIFAR-10 dataset. "
"When applying FedBN, only few changes needed compared to `Example: "
"PyTorch - From Centralized To Federated <https://flower.dev/docs/example-"
"pytorch-from-centralized-to-federated.html>`_."
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:9
msgid "Centralized Training"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:10
msgid ""
"All files are revised based on `Example: PyTorch - From Centralized To "
"Federated <https://flower.dev/docs/example-pytorch-from-centralized-to-"
"federated.html>`_. The only thing to do is modifying the file called "
":code:`cifar.py`, revised part is shown below:"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:13
msgid ""
"The model architecture defined in class Net() is added with Batch "
"Normalization layers accordingly."
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:41
msgid "You can now run your machine learning workload:"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:47
msgid ""
"So far this should all look fairly familiar if you've used PyTorch "
"before. Let's take the next step and use what we've built to create a "
"federated learning system within FedBN, the sytstem consists of one "
"server and two clients."
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:51
msgid "Federated Training"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:53
msgid ""
"If you have read `Example: PyTorch - From Centralized To Federated "
"<https://flower.dev/docs/example-pytorch-from-centralized-to-"
"federated.html>`_, the following parts are easy to follow, onyl "
":code:`get_parameters` and :code:`set_parameters` function in "
":code:`client.py` needed to revise. If not, please read the `Example: "
"PyTorch - From Centralized To Federated <https://flower.dev/docs/example-"
"pytorch-from-centralized-to-federated.html>`_. first."
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:56
msgid ""
"Our example consists of one *server* and two *clients*. In FedBN, "
":code:`server.py` keeps unchanged, we can start the server directly."
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:62
msgid ""
"Finally, we will revise our *client* logic by changing "
":code:`get_parameters` and :code:`set_parameters` in :code:`client.py`, "
"we will exclude batch normalization parameters from model parameter list "
"when sending to or receiving from the server."
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:85
msgid "Now, you can now open two additional terminal windows and run"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:91
msgid ""
"in each window (make sure that the server is still running before you do "
"so) and see your (previously centralized) PyTorch project run federated "
"learning with FedBN strategy across two clients. Congratulations!"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:94
msgid "Next Steps"
msgstr ""

#: ../../source/fedbn-example-pytorch-from-centralized-to-federated.rst:96
msgid ""
"The full source code for this example can be found `here "
"<https://github.com/adap/flower/blob/main/examples/pytorch-from-"
"centralized-to-federated>`_. Our example is of course somewhat over-"
"simplified because both clients load the exact same dataset, which isn't "
"realistic. You're now prepared to explore this topic further. How about "
"using different subsets of CIFAR-10 on each client? How about adding more"
" clients?"
msgstr ""

