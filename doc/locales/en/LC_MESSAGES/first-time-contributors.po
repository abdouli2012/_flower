# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Adap GmbH
# This file is distributed under the same license as the Flower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flower \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-09 15:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/first-time-contributors.rst:2
msgid "First time contributors"
msgstr ""

#: ../../source/first-time-contributors.rst:4
msgid ""
"This guide is for people who want to get involved with Flower but who are"
" not used to contributing to GitHub projects."
msgstr ""

#: ../../source/first-time-contributors.rst:7
msgid ""
"If you're familiar with how contributing on GitHub works, you can "
"directly checkout our `getting started guide for contributors "
"<https://flower.dev/docs/getting-started-for-contributors.html>`_ and "
"examples of `good first contributions <https://flower.dev/docs/good-"
"first-contributions.html>`_."
msgstr ""

#: ../../source/first-time-contributors.rst:13
msgid "Setting up the repository"
msgstr ""

#: ../../source/first-time-contributors.rst:24
msgid "**Create a GitHub account and setup Git**"
msgstr ""

#: ../../source/first-time-contributors.rst:16
msgid ""
"Git is a distributed version control tool. This allows for an entire "
"codebase's history to be stored and every developer's machine. It is a "
"software that will need to be installed on your local machine, you can "
"follow this `guide <https://docs.github.com/en/get-started/quickstart"
"/set-up-git>`_ to set it up."
msgstr ""

#: ../../source/first-time-contributors.rst:19
msgid ""
"GitHub, itself, is a code hosting platform for version control and "
"collaboration. It allows for everyone to collaborate and work from "
"anywhere on remote repositories."
msgstr ""

#: ../../source/first-time-contributors.rst:21
msgid ""
"If you haven't already, you will need to create an account on `GitHub "
"<https://github.com/signup>`_."
msgstr ""

#: ../../source/first-time-contributors.rst:23
msgid ""
"The idea behind the generic Git and GitHub workflow boils down to this: "
"you download code from a remote repository on GitHub, make changes "
"locally and keep track of them using Git and then you upload your new "
"history back to GitHub."
msgstr ""

#: ../../source/first-time-contributors.rst:35
msgid "**Forking the Flower repository**"
msgstr ""

#: ../../source/first-time-contributors.rst:27
msgid ""
"A fork is a personal copy of a GitHub repository. To create one for "
"Flower, you must navigate to https://github.com/adap/flower (while "
"connected to your GitHub account) and click the ``Fork`` button situated "
"on the top right of the page."
msgstr ""

#: ../../source/first-time-contributors.rst:32
msgid ""
"You can change the name if you want, but this is not necessary as this "
"version of Flower will be yours and will sit inside your own account "
"(i.e., in your own list of repositories). Once created, you should see on"
" the top left corner that you are looking at your own version of Flower."
msgstr ""

#: ../../source/first-time-contributors.rst:50
msgid "**Cloning your forked repository**"
msgstr ""

#: ../../source/first-time-contributors.rst:38
msgid ""
"The next step is to download the forked repository on your machine to be "
"able to make changes to it. On your forked repository page, you should "
"first click on the ``Code`` button on the right, this will give you the "
"ability to copy the HTTPS link of the repository."
msgstr ""

#: ../../source/first-time-contributors.rst:44
msgid ""
"Once you copied the \\<URL\\>, you can open a terminal on your machine, "
"navigate to the place you want to download the repository to and type:"
msgstr ""

#: ../../source/first-time-contributors.rst:50
msgid ""
"This will create a `flower/` (or the name of your fork if you renamed it)"
" folder in the current working directory."
msgstr ""

#: ../../source/first-time-contributors.rst:69
msgid "**Add origin**"
msgstr ""

#: ../../source/first-time-contributors.rst:53
msgid "You can then go into the repository folder:"
msgstr ""

#: ../../source/first-time-contributors.rst:59
msgid ""
"And here we will need to add an origin to our repository. The origin is "
"the \\<URL\\> of the remote fork repository. To obtain it, we can do as "
"previously mentioned by going to our fork repository on our GitHub "
"account and copying the link."
msgstr ""

#: ../../source/first-time-contributors.rst:64
msgid ""
"Once the \\<URL\\> is copied, we can type the following command in our "
"terminal:"
msgstr ""

#: ../../source/first-time-contributors.rst:92
msgid "**Add upstream**"
msgstr ""

#: ../../source/first-time-contributors.rst:72
msgid ""
"Now we will add an upstream address to our repository. Still in the same "
"directroy, we must run the following command:"
msgstr ""

#: ../../source/first-time-contributors.rst:79
msgid "The following diagram visually explains what we did in the previous steps:"
msgstr ""

#: ../../source/first-time-contributors.rst:83
msgid ""
"The upstream is the GitHub remote address of the parent repository (in "
"this case Flower), i.e. the one we eventually want to contribute to and "
"therefore need an up-to-date history of. The origin is just the GitHub "
"remote address of the forked repository we created, i.e. the copy (fork) "
"in our own account."
msgstr ""

#: ../../source/first-time-contributors.rst:87
msgid ""
"To make sure our local version of the fork is up-to-date with the latest "
"changes from the Flower repository, we can execute the following command:"
msgstr ""

#: ../../source/first-time-contributors.rst:95
msgid "Setting up the coding environment"
msgstr ""

#: ../../source/first-time-contributors.rst:97
msgid ""
"This can be achieved by following this `getting started guide for "
"contributors`_ (note that you won't need to clone the repository). Once "
"you are able to write code and test it, you can finally start making "
"changes!"
msgstr ""

#: ../../source/first-time-contributors.rst:101
msgid "Making changes"
msgstr ""

#: ../../source/first-time-contributors.rst:103
msgid ""
"Before making any changes make sure you are up-to-date with your "
"repository:"
msgstr ""

#: ../../source/first-time-contributors.rst:109
msgid "And with Flower's repository:"
msgstr ""

#: ../../source/first-time-contributors.rst:123
msgid "**Create a new branch**"
msgstr ""

#: ../../source/first-time-contributors.rst:116
msgid ""
"To make the history cleaner and easier to work with, it is good practice "
"to create a new branch for each feature/project that needs to be "
"implemented."
msgstr ""

#: ../../source/first-time-contributors.rst:119
msgid ""
"To do so, just run the following command inside the repository's "
"directory:"
msgstr ""

#: ../../source/first-time-contributors.rst:126
msgid "**Make changes**"
msgstr ""

#: ../../source/first-time-contributors.rst:126
msgid "Write great code and create wonderful changes using your favorite editor!"
msgstr ""

#: ../../source/first-time-contributors.rst:139
msgid "**Test and format your code**"
msgstr ""

#: ../../source/first-time-contributors.rst:129
msgid ""
"Don't forget to test and format your code! Otherwise your code won't be "
"able to be merged into the Flower repository. This is done so the "
"codebase stays consistent and easy to understand."
msgstr ""

#: ../../source/first-time-contributors.rst:132
msgid "To do so, we have written a few scripts that you can execute:"
msgstr ""

#: ../../source/first-time-contributors.rst:151
msgid "**Stage changes**"
msgstr ""

#: ../../source/first-time-contributors.rst:142
msgid ""
"Before creating a commit that will update your history, you must specify "
"to Git which files it needs to take into account."
msgstr ""

#: ../../source/first-time-contributors.rst:144
msgid "This can be done with:"
msgstr ""

#: ../../source/first-time-contributors.rst:150
msgid ""
"To check which files have been modified compared to the last version "
"(last commit) and to see which files are staged for commit, you can use "
"the :code:`git status` command."
msgstr ""

#: ../../source/first-time-contributors.rst:161
msgid "**Commit changes**"
msgstr ""

#: ../../source/first-time-contributors.rst:154
msgid ""
"Once you have added all the files you wanted to commit using :code:`git "
"add`, you can finally create your commit using this command:"
msgstr ""

#: ../../source/first-time-contributors.rst:160
msgid ""
"The \\<commit_message\\> is there to explain to others what the commit "
"does. It should be written in an imperative style and be concise. An "
"example would be :code:`git commit -m \"Add images to README\"`."
msgstr ""

#: ../../source/first-time-contributors.rst:171
msgid "**Push the changes to the fork**"
msgstr ""

#: ../../source/first-time-contributors.rst:164
msgid ""
"Once we have committed our changes, we have effectively updated our local"
" history, but GitHub has no way of knowing this unless we push our "
"changes to our origin's remote address:"
msgstr ""

#: ../../source/first-time-contributors.rst:171
msgid ""
"Once this is done, you will see on the GitHub that your forked repo was "
"updated with the changes you have made."
msgstr ""

#: ../../source/first-time-contributors.rst:174
msgid "Creating and merging a pull request (PR)"
msgstr ""

#: ../../source/first-time-contributors.rst:201
msgid "**Create the PR**"
msgstr ""

#: ../../source/first-time-contributors.rst:177
msgid ""
"Once you have pushed changes, on the GitHub webpage of your repository "
"you should see the following message:"
msgstr ""

#: ../../source/first-time-contributors.rst:181
msgid "Otherwise you can always find this option in the `Branches` page."
msgstr ""

#: ../../source/first-time-contributors.rst:183
msgid ""
"Once you click the `Compare & pull request` button, you should see "
"something similar to this:"
msgstr ""

#: ../../source/first-time-contributors.rst:187
msgid "At the top you have an explanation of which branch will be merged where:"
msgstr ""

#: ../../source/first-time-contributors.rst:191
msgid ""
"In this example you can see that the request is to merge the branch "
"``doc-fixes`` from my forked repository to branch ``main`` from the "
"Flower repository."
msgstr ""

#: ../../source/first-time-contributors.rst:193
msgid ""
"The input box in the middle is there for you to describe what your PR "
"does and to link it to existing issues. We have placed comments (that "
"won't be rendered once the PR is opened) to guide you through the "
"process."
msgstr ""

#: ../../source/first-time-contributors.rst:196
msgid ""
"At the bottom you will find the button to open the PR. This will notify "
"reviewers that a new PR has been opened and that they should look over it"
" to merge or to request changes."
msgstr ""

#: ../../source/first-time-contributors.rst:199
msgid ""
"If your PR is not yet ready for review, and you don't want to notify "
"anyone, you have the option to create a draft pull request:"
msgstr ""

#: ../../source/first-time-contributors.rst:204
msgid "**Making new changes**"
msgstr ""

#: ../../source/first-time-contributors.rst:204
msgid ""
"Once the PR has been opened (as draft or not), you can still push new "
"commits to it the same way we did before, by making changes to the branch"
" associated with the PR."
msgstr ""

#: ../../source/first-time-contributors.rst:226
msgid "**Review the PR**"
msgstr ""

#: ../../source/first-time-contributors.rst:207
msgid ""
"Once the PR has been opened or once the draft PR has been marked as "
"ready, a review from code owners will be automatically requested:"
msgstr ""

#: ../../source/first-time-contributors.rst:211
msgid ""
"Code owners will then look into the code, ask questions, request changes "
"or validate the PR."
msgstr ""

#: ../../source/first-time-contributors.rst:213
msgid "Merging will be blocked if there are ongoing requested changes."
msgstr ""

#: ../../source/first-time-contributors.rst:217
msgid ""
"To resolve them, just push the necessary changes to the branch associated"
" with the PR:"
msgstr ""

#: ../../source/first-time-contributors.rst:221
msgid "And resolve the conversation:"
msgstr ""

#: ../../source/first-time-contributors.rst:225
msgid ""
"Once all the conversations have been resolved, you can re-request a "
"review."
msgstr ""

#: ../../source/first-time-contributors.rst:246
msgid "**Once the PR is merged**"
msgstr ""

#: ../../source/first-time-contributors.rst:229
msgid ""
"If all the automatic tests have passed and reviewers have no more changes"
" to request, they can approve the PR and merge it."
msgstr ""

#: ../../source/first-time-contributors.rst:233
msgid ""
"Once it is merged, you can delete the branch on GitHub (a button should "
"appear to do so) and also delete it locally by doing:"
msgstr ""

#: ../../source/first-time-contributors.rst:240
msgid "Then you should update your forked repository by doing:"
msgstr ""

#: ../../source/first-time-contributors.rst:249
msgid "Example of first contribution"
msgstr ""

#: ../../source/first-time-contributors.rst:252
msgid "Problem"
msgstr ""

#: ../../source/first-time-contributors.rst:254
msgid ""
"For our documentation, we’ve started to use the `Diàtaxis framework "
"<https://diataxis.fr/>`_."
msgstr ""

#: ../../source/first-time-contributors.rst:256
msgid ""
"Our “How to” guides should have titles that continue the sencence “How to"
" …”, for example, “How to upgrade to Flower 1.0”."
msgstr ""

#: ../../source/first-time-contributors.rst:258
msgid ""
"Most of our guides do not follow this new format yet, and changing their "
"title is (unfortunately) more involved than one might think."
msgstr ""

#: ../../source/first-time-contributors.rst:260
msgid ""
"This issue is about changing the title of a doc from present continious "
"to present simple."
msgstr ""

#: ../../source/first-time-contributors.rst:262
msgid ""
"Let's take the example of “Saving Progress” which we changed to “Save "
"Progress”. Does this pass our check?"
msgstr ""

#: ../../source/first-time-contributors.rst:264
msgid "Before: ”How to saving progress” ❌"
msgstr ""

#: ../../source/first-time-contributors.rst:266
msgid "After: ”How to save progress” ✅"
msgstr ""

#: ../../source/first-time-contributors.rst:269
msgid "Solution"
msgstr ""

#: ../../source/first-time-contributors.rst:271
msgid ""
"This is a tiny change, but it’ll allow us to test your end-to-end setup. "
"After cloning and setting up the Flower repo, here’s what you should do:"
msgstr ""

#: ../../source/first-time-contributors.rst:273
msgid "Find the source file in `doc/source`"
msgstr ""

#: ../../source/first-time-contributors.rst:274
msgid ""
"Make the change in the `.rst` file (beware, the dashes under the title "
"should be the same length as the title itself)"
msgstr ""

#: ../../source/first-time-contributors.rst:275
msgid ""
"Build the docs and check the result: `<https://flower.dev/docs/writing-"
"documentation.html#edit-an-existing-page>`_"
msgstr ""

#: ../../source/first-time-contributors.rst:278
msgid "Rename file"
msgstr ""

#: ../../source/first-time-contributors.rst:280
msgid ""
"You might have noticed that the file name still reflects the old wording."
" If we just change the file, then we break all existing links to it - it "
"is **very important** to avoid that, breaking links can harm our search "
"engine ranking."
msgstr ""

#: ../../source/first-time-contributors.rst:283
msgid "Here’s how to change the file name:"
msgstr ""

#: ../../source/first-time-contributors.rst:285
msgid "Change the file name to `save-progress.rst`"
msgstr ""

#: ../../source/first-time-contributors.rst:286
msgid "Add a redirect rule to `doc/source/conf.py`"
msgstr ""

#: ../../source/first-time-contributors.rst:288
msgid ""
"This will cause a redirect from `saving-progress.html` to `save-"
"progress.html`, old links will continue to work."
msgstr ""

#: ../../source/first-time-contributors.rst:291
msgid "Apply changes in the index file"
msgstr ""

#: ../../source/first-time-contributors.rst:293
msgid ""
"For the lateral navigation bar to work properly, it is very important to "
"update the `index.rst` file as well. This is where we define the whole "
"arborescence of the navbar."
msgstr ""

#: ../../source/first-time-contributors.rst:296
msgid "Find and modify the file name in `index.rst`"
msgstr ""

#: ../../source/first-time-contributors.rst:299
msgid "Open PR"
msgstr ""

#: ../../source/first-time-contributors.rst:301
msgid ""
"Commit the changes (commit messages are always imperative: “Do "
"something”, in this case “Change …”)"
msgstr ""

#: ../../source/first-time-contributors.rst:302
msgid "Push the changes to your fork"
msgstr ""

#: ../../source/first-time-contributors.rst:303
msgid "Open a PR (as shown above)"
msgstr ""

#: ../../source/first-time-contributors.rst:304
msgid "Wait for it to be approved!"
msgstr ""

#: ../../source/first-time-contributors.rst:305
msgid "Congrats! 🥳 You're now officially a Flower contributor!"
msgstr ""

#: ../../source/first-time-contributors.rst:309
msgid "How to write a good PR title"
msgstr ""

#: ../../source/first-time-contributors.rst:311
msgid ""
"A well-crafted PR title helps team members quickly understand the purpose"
" and scope of the changes being proposed. Here's a guide to help you "
"write a good GitHub PR title:"
msgstr ""

#: ../../source/first-time-contributors.rst:313
msgid ""
"1. Be Clear and Concise: Provide a clear summary of the changes in a "
"concise manner. 1. Use Actionable Verbs: Start with verbs like \"Add,\" "
"\"Update,\" or \"Fix\" to indicate the purpose. 1. Include Relevant "
"Information: Mention the affected feature or module for context. 1. Keep "
"it Short: Avoid lengthy titles for easy readability. 1. Use Proper "
"Capitalization and Punctuation: Follow grammar rules for clarity."
msgstr ""

#: ../../source/first-time-contributors.rst:319
msgid ""
"Let's start with a few examples for titles that should be avoided because"
" they do not provide meaningful information:"
msgstr ""

#: ../../source/first-time-contributors.rst:321
msgid "Implement Algorithm"
msgstr ""

#: ../../source/first-time-contributors.rst:322
msgid "Database"
msgstr ""

#: ../../source/first-time-contributors.rst:323
msgid "Add my_new_file.py to codebase"
msgstr ""

#: ../../source/first-time-contributors.rst:324
msgid "Improve code in module"
msgstr ""

#: ../../source/first-time-contributors.rst:325
msgid "Change SomeModule"
msgstr ""

#: ../../source/first-time-contributors.rst:327
msgid ""
"Here are a few positive examples which provide helpful information "
"without repeating how they do it, as that is already visible in the "
"\"Files changed\" section of the PR:"
msgstr ""

#: ../../source/first-time-contributors.rst:329
msgid "Update docs banner to mention Flower Summit 2023"
msgstr ""

#: ../../source/first-time-contributors.rst:330
msgid "Remove unnecessary XGBoost dependency"
msgstr ""

#: ../../source/first-time-contributors.rst:331
msgid "Remove redundant attributes in strategies subclassing FedAvg"
msgstr ""

#: ../../source/first-time-contributors.rst:332
msgid "Add CI job to deploy the staging system when the `main` branch changes"
msgstr ""

#: ../../source/first-time-contributors.rst:333
msgid ""
"Add new amazing library which will be used to improve the simulation "
"engine"
msgstr ""

#: ../../source/first-time-contributors.rst:336
msgid "Next steps"
msgstr ""

#: ../../source/first-time-contributors.rst:338
msgid ""
"Once you have made your first PR, and want to contribute more, be sure to"
" check out the following :"
msgstr ""

#: ../../source/first-time-contributors.rst:340
msgid ""
"`Good first contributions <https://flower.dev/docs/good-first-"
"contributions.html>`_, where you should particularly look into the "
":code:`baselines` contributions."
msgstr ""

