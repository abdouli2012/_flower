# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Adap GmbH
# This file is distributed under the same license as the Flower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flower \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-09 15:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/secagg.rst:2
msgid "Secure Aggregation Protocols"
msgstr ""

#: ../../source/secagg.rst:4
msgid ""
"Include SecAgg, SecAgg+, and LightSecAgg protocol. The LightSecAgg "
"protocol has not been implemented yet, so its diagram and abstraction may"
" not be accurate in practice. The SecAgg protocol can be considered as a "
"special case of the SecAgg+ protocol."
msgstr ""

#: ../../source/secagg.rst:8
msgid "The :code:`SecAgg+` abstraction"
msgstr ""

#: ../../source/secagg.rst:10 ../../source/secagg.rst:161
msgid ""
"In this implementation, each client will be assigned with a unique index "
"(int) for secure aggregation, and thus many python dictionaries used have"
" keys of int type rather than ClientProxy type."
msgstr ""

#: ../../source/secagg.rst:65 ../../source/secagg.rst:198
msgid ""
"The Flower server will execute and process received results in the "
"following order:"
msgstr ""

#: ../../source/secagg.rst:159
msgid "The :code:`LightSecAgg` abstraction"
msgstr ""

#: ../../source/secagg.rst:271
msgid "Types"
msgstr ""

