# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Adap GmbH
# This file is distributed under the same license as the Flower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flower \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-09 15:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/save-progress.rst:2
msgid "Save Progress"
msgstr ""

#: ../../source/save-progress.rst:4
msgid ""
"The Flower server does not prescribe a way to persist model updates or "
"evaluation results. Flower does not (yet) automatically save model "
"updates on the server-side. It's on the roadmap to provide a built-in way"
" of doing this."
msgstr ""

#: ../../source/save-progress.rst:9
msgid "Model Checkpointing"
msgstr ""

#: ../../source/save-progress.rst:11
msgid ""
"Model updates can be persisted on the server-side by customizing "
":code:`Strategy` methods. Implementing custom strategies is always an "
"option, but for many cases it may be more convenient to simply customize "
"an existing strategy. The following code example defines a new "
":code:`SaveModelStrategy` which customized the existing built-in "
":code:`FedAvg` strategy. In particular, it customizes "
":code:`aggregate_fit` by calling :code:`aggregate_fit` in the base class "
"(:code:`FedAvg`). It then continues to save returned (aggregated) weights"
" before it returns those aggregated weights to the caller (i.e., the "
"server):"
msgstr ""

#: ../../source/save-progress.rst:47
msgid "Aggregate Custom Evaluation Results"
msgstr ""

#: ../../source/save-progress.rst:49
msgid ""
"The same :code:`Strategy`-customization approach can be used to aggregate"
" custom evaluation results coming from individual clients. Clients can "
"return custom metrics to the server by returning a dictionary:"
msgstr ""

#: ../../source/save-progress.rst:75
msgid ""
"The server can then use a customized strategy to aggregate the metrics "
"provided in these dictionaries:"
msgstr ""

