# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 Adap GmbH
# This file is distributed under the same license as the Flower package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Flower \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-09 15:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/getting-started-for-contributors.rst:2
msgid "Getting Started (for Contributors)"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:5
msgid "Prerequisites"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:7
msgid "`Python 3.7 <https://docs.python.org/3.7/>`_ or above"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:8
msgid "`Poetry 1.3 <https://python-poetry.org/>`_ or above"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:9
msgid "(Optional) `pyenv <https://github.com/pyenv/pyenv>`_"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:10
msgid "(Optional) `pyenv-virtualenv <https://github.com/pyenv/pyenv-virtualenv>`_"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:12
msgid ""
"Flower uses :code:`pyproject.toml` to manage dependencies and configure "
"development tools (the ones which support it). Poetry is a build tool "
"which supports `PEP 517 <https://www.python.org/dev/peps/pep-0517/>`_."
msgstr ""

#: ../../source/getting-started-for-contributors.rst:18
msgid "Developer Machine Setup"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:20
msgid ""
"First, clone the `Flower repository <https://github.com/adap/flower>`_ "
"from GitHub::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:26
msgid ""
"Second, create a virtual environment (and activate it). If you chose to "
"use :code:`pyenv` (with the :code:`pyenv-virtualenv` plugin) and already "
"have it installed , you can use the following convenience script (by "
"default it will use :code:`Python 3.7.15`, but you can change it by "
"providing a specific :code:`<version>`)::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:33
msgid ""
"If you don't have :code:`pyenv` installed, you can use the following "
"script that will install pyenv, set it up and create the virtual "
"environment (with :code:`Python 3.7.15` by default)::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:39
msgid ""
"Third, install the Flower package in development mode (think :code:`pip "
"install -e`) along with all necessary dependencies::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:46
msgid "Convenience Scripts"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:48
msgid ""
"The Flower repository contains a number of convenience scripts to make "
"recurring development tasks easier and less error-prone. See the "
":code:`/dev` subdirectory for a full list. The following scripts are "
"amonst the most important ones:"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:54
msgid "Create/Delete Virtual Environment"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:62
msgid "Compile ProtoBuf Definitions"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:69
msgid "Auto-Format Code"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:76
msgid "Run Linters and Tests"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:83
msgid "Run Github Actions (CI) locally"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:85
msgid ""
"Developers could run the full set of Github Actions workflows under their"
" local environment by using `Act <https://github.com/nektos/act>_`. "
"Please refer to the installation instructions under the linked repository"
" and run the next command under Flower main cloned repository folder::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:92
msgid ""
"The Flower default workflow would run by setting up the required Docker "
"machines underneath."
msgstr ""

#: ../../source/getting-started-for-contributors.rst:97
msgid "Build Release"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:99
msgid ""
"Flower uses Poetry to build releases. The necessary command is wrapped in"
" a simple script::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:104
msgid ""
"The resulting :code:`.whl` and :code:`.tar.gz` releases will be stored in"
" the :code:`/dist` subdirectory."
msgstr ""

#: ../../source/getting-started-for-contributors.rst:109
msgid "Build Documentation"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:111
msgid ""
"Flower's documentation uses `Sphinx <https://www.sphinx-doc.org/>`_. "
"There's no convenience script to re-build the documentation yet, but it's"
" pretty easy::"
msgstr ""

#: ../../source/getting-started-for-contributors.rst:117
msgid "This will generate HTML documentation in ``doc/build/html``."
msgstr ""

#: ../../source/getting-started-for-contributors.rst:119
msgid ""
"Note that, in order to build the documentation locally (with ``poetry run"
" make html``, like described below), `Pandoc "
"<https://pandoc.org/installing.html>_` needs to be installed on the "
"system."
msgstr ""

